{"ast":null,"code":"const KEEP_ALIVE_DELAY = 60000; // in ms\n\n/**\n * @returns {import(\"../../types\").ISocketFactory}\n */\nmodule.exports = () => {\n  const net = require('net');\n  const tls = require('tls');\n  return ({\n    host,\n    port,\n    ssl,\n    onConnect\n  }) => {\n    const socket = ssl ? tls.connect(Object.assign({\n      host,\n      port\n    }, !net.isIP(host) ? {\n      servername: host\n    } : {}, ssl), onConnect) : net.connect({\n      host,\n      port\n    }, onConnect);\n    socket.setKeepAlive(true, KEEP_ALIVE_DELAY);\n    return socket;\n  };\n};","map":{"version":3,"names":["KEEP_ALIVE_DELAY","module","exports","net","require","tls","host","port","ssl","onConnect","socket","connect","Object","assign","isIP","servername","setKeepAlive"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/network/socketFactory.js"],"sourcesContent":["const KEEP_ALIVE_DELAY = 60000 // in ms\n\n/**\n * @returns {import(\"../../types\").ISocketFactory}\n */\nmodule.exports = () => {\n  const net = require('net')\n  const tls = require('tls')\n\n  return ({ host, port, ssl, onConnect }) => {\n    const socket = ssl\n      ? tls.connect(\n          Object.assign({ host, port }, !net.isIP(host) ? { servername: host } : {}, ssl),\n          onConnect\n        )\n      : net.connect({ host, port }, onConnect)\n\n    socket.setKeepAlive(true, KEEP_ALIVE_DELAY)\n\n    return socket\n  }\n}\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,KAAK,EAAC;;AAE/B;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,MAAM;EACrB,MAAMC,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;EAC1B,MAAMC,GAAG,GAAGD,OAAO,CAAC,KAAK,CAAC;EAE1B,OAAO,CAAC;IAAEE,IAAI;IAAEC,IAAI;IAAEC,GAAG;IAAEC;EAAU,CAAC,KAAK;IACzC,MAAMC,MAAM,GAAGF,GAAG,GACdH,GAAG,CAACM,OAAO,CACTC,MAAM,CAACC,MAAM,CAAC;MAAEP,IAAI;MAAEC;IAAK,CAAC,EAAE,CAACJ,GAAG,CAACW,IAAI,CAACR,IAAI,CAAC,GAAG;MAAES,UAAU,EAAET;IAAK,CAAC,GAAG,CAAC,CAAC,EAAEE,GAAG,CAAC,EAC/EC,SAAS,CACV,GACDN,GAAG,CAACQ,OAAO,CAAC;MAAEL,IAAI;MAAEC;IAAK,CAAC,EAAEE,SAAS,CAAC;IAE1CC,MAAM,CAACM,YAAY,CAAC,IAAI,EAAEhB,gBAAgB,CAAC;IAE3C,OAAOU,MAAM;EACf,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}