{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Decoder = require('../../../decoder');\nconst {\n  failure,\n  createErrorFromCode,\n  failIfVersionNotSupported\n} = require('../../../error');\n\n/**\n * Heartbeat Response (Version: 0) => error_code\n *   error_code => INT16\n */\n\nconst decode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (rawData) {\n    const decoder = new Decoder(rawData);\n    const errorCode = decoder.readInt16();\n    failIfVersionNotSupported(errorCode);\n    return {\n      errorCode\n    };\n  });\n  return function decode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst parse = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (data) {\n    if (failure(data.errorCode)) {\n      throw createErrorFromCode(data.errorCode);\n    }\n    return data;\n  });\n  return function parse(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  decode,\n  parse\n};","map":{"version":3,"names":["Decoder","require","failure","createErrorFromCode","failIfVersionNotSupported","decode","rawData","decoder","errorCode","readInt16","parse","data","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/heartbeat/v0/response.js"],"sourcesContent":["const Decoder = require('../../../decoder')\nconst { failure, createErrorFromCode, failIfVersionNotSupported } = require('../../../error')\n\n/**\n * Heartbeat Response (Version: 0) => error_code\n *   error_code => INT16\n */\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n  const errorCode = decoder.readInt16()\n\n  failIfVersionNotSupported(errorCode)\n\n  return { errorCode }\n}\n\nconst parse = async data => {\n  if (failure(data.errorCode)) {\n    throw createErrorFromCode(data.errorCode)\n  }\n\n  return data\n}\n\nmodule.exports = {\n  decode,\n  parse,\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC,OAAO;EAAEC,mBAAmB;EAAEC;AAA0B,CAAC,GAAGH,OAAO,CAAC,gBAAgB,CAAC;;AAE7F;AACA;AACA;AACA;;AAEA,MAAMI,MAAM;EAAA,6BAAG,WAAMC,OAAO,EAAI;IAC9B,MAAMC,OAAO,GAAG,IAAIP,OAAO,CAACM,OAAO,CAAC;IACpC,MAAME,SAAS,GAAGD,OAAO,CAACE,SAAS,EAAE;IAErCL,yBAAyB,CAACI,SAAS,CAAC;IAEpC,OAAO;MAAEA;IAAU,CAAC;EACtB,CAAC;EAAA,gBAPKH,MAAM;IAAA;EAAA;AAAA,GAOX;AAED,MAAMK,KAAK;EAAA,8BAAG,WAAMC,IAAI,EAAI;IAC1B,IAAIT,OAAO,CAACS,IAAI,CAACH,SAAS,CAAC,EAAE;MAC3B,MAAML,mBAAmB,CAACQ,IAAI,CAACH,SAAS,CAAC;IAC3C;IAEA,OAAOG,IAAI;EACb,CAAC;EAAA,gBANKD,KAAK;IAAA;EAAA;AAAA,GAMV;AAEDE,MAAM,CAACC,OAAO,GAAG;EACfR,MAAM;EACNK;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}