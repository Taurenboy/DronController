{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Decoder = require('../../../decoder');\nconst {\n  KafkaJSOffsetOutOfRange\n} = require('../../../../errors');\nconst {\n  failure,\n  createErrorFromCode,\n  errorCodes\n} = require('../../../error');\nconst MessageSetDecoder = require('../../../messageSet/decoder');\n\n/**\n * Fetch Response (Version: 0) => [responses]\n *   responses => topic [partition_responses]\n *     topic => STRING\n *     partition_responses => partition_header record_set\n *       partition_header => partition error_code high_watermark\n *         partition => INT32\n *         error_code => INT16\n *         high_watermark => INT64\n *       record_set => RECORDS\n */\n\nconst decodePartition = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (decoder) {\n    return {\n      partition: decoder.readInt32(),\n      errorCode: decoder.readInt16(),\n      highWatermark: decoder.readInt64().toString(),\n      messages: yield MessageSetDecoder(decoder)\n    };\n  });\n  return function decodePartition(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst decodeResponse = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (decoder) {\n    return {\n      topicName: decoder.readString(),\n      partitions: yield decoder.readArrayAsync(decodePartition)\n    };\n  });\n  return function decodeResponse(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nconst decode = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (rawData) {\n    const decoder = new Decoder(rawData);\n    const responses = yield decoder.readArrayAsync(decodeResponse);\n    return {\n      responses\n    };\n  });\n  return function decode(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nconst {\n  code: OFFSET_OUT_OF_RANGE_ERROR_CODE\n} = errorCodes.find(e => e.type === 'OFFSET_OUT_OF_RANGE');\nconst parse = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator(function* (data) {\n    const errors = data.responses.flatMap(({\n      topicName,\n      partitions\n    }) => {\n      return partitions.filter(partition => failure(partition.errorCode)).map(partition => Object.assign({}, partition, {\n        topic: topicName\n      }));\n    });\n    if (errors.length > 0) {\n      const {\n        errorCode,\n        topic,\n        partition\n      } = errors[0];\n      if (errorCode === OFFSET_OUT_OF_RANGE_ERROR_CODE) {\n        throw new KafkaJSOffsetOutOfRange(createErrorFromCode(errorCode), {\n          topic,\n          partition\n        });\n      }\n      throw createErrorFromCode(errorCode);\n    }\n    return data;\n  });\n  return function parse(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  decode,\n  parse\n};","map":{"version":3,"names":["Decoder","require","KafkaJSOffsetOutOfRange","failure","createErrorFromCode","errorCodes","MessageSetDecoder","decodePartition","decoder","partition","readInt32","errorCode","readInt16","highWatermark","readInt64","toString","messages","decodeResponse","topicName","readString","partitions","readArrayAsync","decode","rawData","responses","code","OFFSET_OUT_OF_RANGE_ERROR_CODE","find","e","type","parse","data","errors","flatMap","filter","map","Object","assign","topic","length","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/fetch/v0/response.js"],"sourcesContent":["const Decoder = require('../../../decoder')\nconst { KafkaJSOffsetOutOfRange } = require('../../../../errors')\nconst { failure, createErrorFromCode, errorCodes } = require('../../../error')\nconst MessageSetDecoder = require('../../../messageSet/decoder')\n\n/**\n * Fetch Response (Version: 0) => [responses]\n *   responses => topic [partition_responses]\n *     topic => STRING\n *     partition_responses => partition_header record_set\n *       partition_header => partition error_code high_watermark\n *         partition => INT32\n *         error_code => INT16\n *         high_watermark => INT64\n *       record_set => RECORDS\n */\n\nconst decodePartition = async decoder => ({\n  partition: decoder.readInt32(),\n  errorCode: decoder.readInt16(),\n  highWatermark: decoder.readInt64().toString(),\n  messages: await MessageSetDecoder(decoder),\n})\n\nconst decodeResponse = async decoder => ({\n  topicName: decoder.readString(),\n  partitions: await decoder.readArrayAsync(decodePartition),\n})\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n  const responses = await decoder.readArrayAsync(decodeResponse)\n\n  return {\n    responses,\n  }\n}\n\nconst { code: OFFSET_OUT_OF_RANGE_ERROR_CODE } = errorCodes.find(\n  e => e.type === 'OFFSET_OUT_OF_RANGE'\n)\n\nconst parse = async data => {\n  const errors = data.responses.flatMap(({ topicName, partitions }) => {\n    return partitions\n      .filter(partition => failure(partition.errorCode))\n      .map(partition => Object.assign({}, partition, { topic: topicName }))\n  })\n\n  if (errors.length > 0) {\n    const { errorCode, topic, partition } = errors[0]\n    if (errorCode === OFFSET_OUT_OF_RANGE_ERROR_CODE) {\n      throw new KafkaJSOffsetOutOfRange(createErrorFromCode(errorCode), { topic, partition })\n    }\n\n    throw createErrorFromCode(errorCode)\n  }\n\n  return data\n}\n\nmodule.exports = {\n  decode,\n  parse,\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC;AAAwB,CAAC,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AACjE,MAAM;EAAEE,OAAO;EAAEC,mBAAmB;EAAEC;AAAW,CAAC,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;AAC9E,MAAMK,iBAAiB,GAAGL,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMM,eAAe;EAAA,6BAAG,WAAMC,OAAO;IAAA,OAAK;MACxCC,SAAS,EAAED,OAAO,CAACE,SAAS,EAAE;MAC9BC,SAAS,EAAEH,OAAO,CAACI,SAAS,EAAE;MAC9BC,aAAa,EAAEL,OAAO,CAACM,SAAS,EAAE,CAACC,QAAQ,EAAE;MAC7CC,QAAQ,QAAQV,iBAAiB,CAACE,OAAO;IAC3C,CAAC;EAAA,CAAC;EAAA,gBALID,eAAe;IAAA;EAAA;AAAA,GAKnB;AAEF,MAAMU,cAAc;EAAA,8BAAG,WAAMT,OAAO;IAAA,OAAK;MACvCU,SAAS,EAAEV,OAAO,CAACW,UAAU,EAAE;MAC/BC,UAAU,QAAQZ,OAAO,CAACa,cAAc,CAACd,eAAe;IAC1D,CAAC;EAAA,CAAC;EAAA,gBAHIU,cAAc;IAAA;EAAA;AAAA,GAGlB;AAEF,MAAMK,MAAM;EAAA,8BAAG,WAAMC,OAAO,EAAI;IAC9B,MAAMf,OAAO,GAAG,IAAIR,OAAO,CAACuB,OAAO,CAAC;IACpC,MAAMC,SAAS,SAAShB,OAAO,CAACa,cAAc,CAACJ,cAAc,CAAC;IAE9D,OAAO;MACLO;IACF,CAAC;EACH,CAAC;EAAA,gBAPKF,MAAM;IAAA;EAAA;AAAA,GAOX;AAED,MAAM;EAAEG,IAAI,EAAEC;AAA+B,CAAC,GAAGrB,UAAU,CAACsB,IAAI,CAC9DC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,qBAAqB,CACtC;AAED,MAAMC,KAAK;EAAA,8BAAG,WAAMC,IAAI,EAAI;IAC1B,MAAMC,MAAM,GAAGD,IAAI,CAACP,SAAS,CAACS,OAAO,CAAC,CAAC;MAAEf,SAAS;MAAEE;IAAW,CAAC,KAAK;MACnE,OAAOA,UAAU,CACdc,MAAM,CAACzB,SAAS,IAAIN,OAAO,CAACM,SAAS,CAACE,SAAS,CAAC,CAAC,CACjDwB,GAAG,CAAC1B,SAAS,IAAI2B,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE5B,SAAS,EAAE;QAAE6B,KAAK,EAAEpB;MAAU,CAAC,CAAC,CAAC;IACzE,CAAC,CAAC;IAEF,IAAIc,MAAM,CAACO,MAAM,GAAG,CAAC,EAAE;MACrB,MAAM;QAAE5B,SAAS;QAAE2B,KAAK;QAAE7B;MAAU,CAAC,GAAGuB,MAAM,CAAC,CAAC,CAAC;MACjD,IAAIrB,SAAS,KAAKe,8BAA8B,EAAE;QAChD,MAAM,IAAIxB,uBAAuB,CAACE,mBAAmB,CAACO,SAAS,CAAC,EAAE;UAAE2B,KAAK;UAAE7B;QAAU,CAAC,CAAC;MACzF;MAEA,MAAML,mBAAmB,CAACO,SAAS,CAAC;IACtC;IAEA,OAAOoB,IAAI;EACb,CAAC;EAAA,gBAjBKD,KAAK;IAAA;EAAA;AAAA,GAiBV;AAEDU,MAAM,CAACC,OAAO,GAAG;EACfnB,MAAM;EACNQ;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}