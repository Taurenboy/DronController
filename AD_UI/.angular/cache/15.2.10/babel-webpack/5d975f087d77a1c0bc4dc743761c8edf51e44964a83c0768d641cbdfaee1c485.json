{"ast":null,"code":"const Long = require('../../../../utils/long');\nconst HeaderDecoder = require('../../header/v0/decoder');\nconst TimestampTypes = require('../../../timestampTypes');\n\n/**\n * v0\n * Record =>\n *   Length => Varint\n *   Attributes => Int8\n *   TimestampDelta => Varlong\n *   OffsetDelta => Varint\n *   Key => varInt|Bytes\n *   Value => varInt|Bytes\n *   Headers => [HeaderKey HeaderValue]\n *     HeaderKey => VarInt|String\n *     HeaderValue => VarInt|Bytes\n */\n\nmodule.exports = (decoder, batchContext = {}) => {\n  const {\n    firstOffset,\n    firstTimestamp,\n    magicByte,\n    isControlBatch = false,\n    timestampType,\n    maxTimestamp\n  } = batchContext;\n  const attributes = decoder.readInt8();\n  const timestampDelta = decoder.readVarLong();\n  const timestamp = timestampType === TimestampTypes.LOG_APPEND_TIME && maxTimestamp ? maxTimestamp : Long.fromValue(firstTimestamp).add(timestampDelta).toString();\n  const offsetDelta = decoder.readVarInt();\n  const offset = Long.fromValue(firstOffset).add(offsetDelta).toString();\n  const key = decoder.readVarIntBytes();\n  const value = decoder.readVarIntBytes();\n  const headers = decoder.readVarIntArray(HeaderDecoder).reduce((obj, {\n    key,\n    value\n  }) => ({\n    ...obj,\n    [key]: obj[key] === undefined ? value : Array.isArray(obj[key]) ? obj[key].concat([value]) : [obj[key], value]\n  }), {});\n  return {\n    magicByte,\n    attributes,\n    // Record level attributes are presently unused\n    timestamp,\n    offset,\n    key,\n    value,\n    headers,\n    isControlRecord: isControlBatch,\n    batchContext\n  };\n};","map":{"version":3,"names":["Long","require","HeaderDecoder","TimestampTypes","module","exports","decoder","batchContext","firstOffset","firstTimestamp","magicByte","isControlBatch","timestampType","maxTimestamp","attributes","readInt8","timestampDelta","readVarLong","timestamp","LOG_APPEND_TIME","fromValue","add","toString","offsetDelta","readVarInt","offset","key","readVarIntBytes","value","headers","readVarIntArray","reduce","obj","undefined","Array","isArray","concat","isControlRecord"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/recordBatch/record/v0/decoder.js"],"sourcesContent":["const Long = require('../../../../utils/long')\nconst HeaderDecoder = require('../../header/v0/decoder')\nconst TimestampTypes = require('../../../timestampTypes')\n\n/**\n * v0\n * Record =>\n *   Length => Varint\n *   Attributes => Int8\n *   TimestampDelta => Varlong\n *   OffsetDelta => Varint\n *   Key => varInt|Bytes\n *   Value => varInt|Bytes\n *   Headers => [HeaderKey HeaderValue]\n *     HeaderKey => VarInt|String\n *     HeaderValue => VarInt|Bytes\n */\n\nmodule.exports = (decoder, batchContext = {}) => {\n  const {\n    firstOffset,\n    firstTimestamp,\n    magicByte,\n    isControlBatch = false,\n    timestampType,\n    maxTimestamp,\n  } = batchContext\n  const attributes = decoder.readInt8()\n\n  const timestampDelta = decoder.readVarLong()\n  const timestamp =\n    timestampType === TimestampTypes.LOG_APPEND_TIME && maxTimestamp\n      ? maxTimestamp\n      : Long.fromValue(firstTimestamp)\n          .add(timestampDelta)\n          .toString()\n\n  const offsetDelta = decoder.readVarInt()\n  const offset = Long.fromValue(firstOffset)\n    .add(offsetDelta)\n    .toString()\n\n  const key = decoder.readVarIntBytes()\n  const value = decoder.readVarIntBytes()\n  const headers = decoder.readVarIntArray(HeaderDecoder).reduce(\n    (obj, { key, value }) => ({\n      ...obj,\n      [key]:\n        obj[key] === undefined\n          ? value\n          : Array.isArray(obj[key])\n          ? obj[key].concat([value])\n          : [obj[key], value],\n    }),\n    {}\n  )\n\n  return {\n    magicByte,\n    attributes, // Record level attributes are presently unused\n    timestamp,\n    offset,\n    key,\n    value,\n    headers,\n    isControlRecord: isControlBatch,\n    batchContext,\n  }\n}\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAC9C,MAAMC,aAAa,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AACxD,MAAME,cAAc,GAAGF,OAAO,CAAC,yBAAyB,CAAC;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAG,CAACC,OAAO,EAAEC,YAAY,GAAG,CAAC,CAAC,KAAK;EAC/C,MAAM;IACJC,WAAW;IACXC,cAAc;IACdC,SAAS;IACTC,cAAc,GAAG,KAAK;IACtBC,aAAa;IACbC;EACF,CAAC,GAAGN,YAAY;EAChB,MAAMO,UAAU,GAAGR,OAAO,CAACS,QAAQ,EAAE;EAErC,MAAMC,cAAc,GAAGV,OAAO,CAACW,WAAW,EAAE;EAC5C,MAAMC,SAAS,GACbN,aAAa,KAAKT,cAAc,CAACgB,eAAe,IAAIN,YAAY,GAC5DA,YAAY,GACZb,IAAI,CAACoB,SAAS,CAACX,cAAc,CAAC,CAC3BY,GAAG,CAACL,cAAc,CAAC,CACnBM,QAAQ,EAAE;EAEnB,MAAMC,WAAW,GAAGjB,OAAO,CAACkB,UAAU,EAAE;EACxC,MAAMC,MAAM,GAAGzB,IAAI,CAACoB,SAAS,CAACZ,WAAW,CAAC,CACvCa,GAAG,CAACE,WAAW,CAAC,CAChBD,QAAQ,EAAE;EAEb,MAAMI,GAAG,GAAGpB,OAAO,CAACqB,eAAe,EAAE;EACrC,MAAMC,KAAK,GAAGtB,OAAO,CAACqB,eAAe,EAAE;EACvC,MAAME,OAAO,GAAGvB,OAAO,CAACwB,eAAe,CAAC5B,aAAa,CAAC,CAAC6B,MAAM,CAC3D,CAACC,GAAG,EAAE;IAAEN,GAAG;IAAEE;EAAM,CAAC,MAAM;IACxB,GAAGI,GAAG;IACN,CAACN,GAAG,GACFM,GAAG,CAACN,GAAG,CAAC,KAAKO,SAAS,GAClBL,KAAK,GACLM,KAAK,CAACC,OAAO,CAACH,GAAG,CAACN,GAAG,CAAC,CAAC,GACvBM,GAAG,CAACN,GAAG,CAAC,CAACU,MAAM,CAAC,CAACR,KAAK,CAAC,CAAC,GACxB,CAACI,GAAG,CAACN,GAAG,CAAC,EAAEE,KAAK;EACxB,CAAC,CAAC,EACF,CAAC,CAAC,CACH;EAED,OAAO;IACLlB,SAAS;IACTI,UAAU;IAAE;IACZI,SAAS;IACTO,MAAM;IACNC,GAAG;IACHE,KAAK;IACLC,OAAO;IACPQ,eAAe,EAAE1B,cAAc;IAC/BJ;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}