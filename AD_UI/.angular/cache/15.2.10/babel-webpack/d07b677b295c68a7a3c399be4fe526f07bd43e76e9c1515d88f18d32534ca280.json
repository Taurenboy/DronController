{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Decoder = require('../../../decoder');\nconst {\n  parse: parseV1\n} = require('../v1/response');\n\n/**\n * CreateTopics Response (Version: 2) => throttle_time_ms [topic_errors]\n *   throttle_time_ms => INT32\n *   topic_errors => topic error_code error_message\n *     topic => STRING\n *     error_code => INT16\n *     error_message => NULLABLE_STRING\n */\n\nconst topicNameComparator = (a, b) => a.topic.localeCompare(b.topic);\nconst topicErrors = decoder => ({\n  topic: decoder.readString(),\n  errorCode: decoder.readInt16(),\n  errorMessage: decoder.readString()\n});\nconst decode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (rawData) {\n    const decoder = new Decoder(rawData);\n    return {\n      throttleTime: decoder.readInt32(),\n      topicErrors: decoder.readArray(topicErrors).sort(topicNameComparator)\n    };\n  });\n  return function decode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  decode,\n  parse: parseV1\n};","map":{"version":3,"names":["Decoder","require","parse","parseV1","topicNameComparator","a","b","topic","localeCompare","topicErrors","decoder","readString","errorCode","readInt16","errorMessage","decode","rawData","throttleTime","readInt32","readArray","sort","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/createTopics/v2/response.js"],"sourcesContent":["const Decoder = require('../../../decoder')\nconst { parse: parseV1 } = require('../v1/response')\n\n/**\n * CreateTopics Response (Version: 2) => throttle_time_ms [topic_errors]\n *   throttle_time_ms => INT32\n *   topic_errors => topic error_code error_message\n *     topic => STRING\n *     error_code => INT16\n *     error_message => NULLABLE_STRING\n */\n\nconst topicNameComparator = (a, b) => a.topic.localeCompare(b.topic)\n\nconst topicErrors = decoder => ({\n  topic: decoder.readString(),\n  errorCode: decoder.readInt16(),\n  errorMessage: decoder.readString(),\n})\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n  return {\n    throttleTime: decoder.readInt32(),\n    topicErrors: decoder.readArray(topicErrors).sort(topicNameComparator),\n  }\n}\n\nmodule.exports = {\n  decode,\n  parse: parseV1,\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC,KAAK,EAAEC;AAAQ,CAAC,GAAGF,OAAO,CAAC,gBAAgB,CAAC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,mBAAmB,GAAG,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,CAACC,aAAa,CAACF,CAAC,CAACC,KAAK,CAAC;AAEpE,MAAME,WAAW,GAAGC,OAAO,KAAK;EAC9BH,KAAK,EAAEG,OAAO,CAACC,UAAU,EAAE;EAC3BC,SAAS,EAAEF,OAAO,CAACG,SAAS,EAAE;EAC9BC,YAAY,EAAEJ,OAAO,CAACC,UAAU;AAClC,CAAC,CAAC;AAEF,MAAMI,MAAM;EAAA,6BAAG,WAAMC,OAAO,EAAI;IAC9B,MAAMN,OAAO,GAAG,IAAIV,OAAO,CAACgB,OAAO,CAAC;IACpC,OAAO;MACLC,YAAY,EAAEP,OAAO,CAACQ,SAAS,EAAE;MACjCT,WAAW,EAAEC,OAAO,CAACS,SAAS,CAACV,WAAW,CAAC,CAACW,IAAI,CAAChB,mBAAmB;IACtE,CAAC;EACH,CAAC;EAAA,gBANKW,MAAM;IAAA;EAAA;AAAA,GAMX;AAEDM,MAAM,CAACC,OAAO,GAAG;EACfP,MAAM;EACNb,KAAK,EAAEC;AACT,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}