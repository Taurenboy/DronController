{"ast":null,"code":"const isInvalidOffset = require('./isInvalidOffset');\nconst {\n  keys,\n  assign\n} = Object;\nconst indexPartitions = (obj, {\n  partition,\n  offset\n}) => assign(obj, {\n  [partition]: offset\n});\nconst indexTopics = (obj, {\n  topic,\n  partitions\n}) => assign(obj, {\n  [topic]: partitions.reduce(indexPartitions, {})\n});\nmodule.exports = (consumerOffsets, topicOffsets) => {\n  const indexedConsumerOffsets = consumerOffsets.reduce(indexTopics, {});\n  const indexedTopicOffsets = topicOffsets.reduce(indexTopics, {});\n  return keys(indexedConsumerOffsets).map(topic => {\n    const partitions = indexedConsumerOffsets[topic];\n    return {\n      topic,\n      partitions: keys(partitions).map(partition => {\n        const offset = partitions[partition];\n        const resolvedOffset = isInvalidOffset(offset) ? indexedTopicOffsets[topic][partition] : offset;\n        return {\n          partition: Number(partition),\n          offset: resolvedOffset\n        };\n      })\n    };\n  });\n};","map":{"version":3,"names":["isInvalidOffset","require","keys","assign","Object","indexPartitions","obj","partition","offset","indexTopics","topic","partitions","reduce","module","exports","consumerOffsets","topicOffsets","indexedConsumerOffsets","indexedTopicOffsets","map","resolvedOffset","Number"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/consumer/offsetManager/initializeConsumerOffsets.js"],"sourcesContent":["const isInvalidOffset = require('./isInvalidOffset')\nconst { keys, assign } = Object\n\nconst indexPartitions = (obj, { partition, offset }) => assign(obj, { [partition]: offset })\nconst indexTopics = (obj, { topic, partitions }) =>\n  assign(obj, { [topic]: partitions.reduce(indexPartitions, {}) })\n\nmodule.exports = (consumerOffsets, topicOffsets) => {\n  const indexedConsumerOffsets = consumerOffsets.reduce(indexTopics, {})\n  const indexedTopicOffsets = topicOffsets.reduce(indexTopics, {})\n\n  return keys(indexedConsumerOffsets).map(topic => {\n    const partitions = indexedConsumerOffsets[topic]\n    return {\n      topic,\n      partitions: keys(partitions).map(partition => {\n        const offset = partitions[partition]\n        const resolvedOffset = isInvalidOffset(offset)\n          ? indexedTopicOffsets[topic][partition]\n          : offset\n\n        return { partition: Number(partition), offset: resolvedOffset }\n      }),\n    }\n  })\n}\n"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACpD,MAAM;EAAEC,IAAI;EAAEC;AAAO,CAAC,GAAGC,MAAM;AAE/B,MAAMC,eAAe,GAAG,CAACC,GAAG,EAAE;EAAEC,SAAS;EAAEC;AAAO,CAAC,KAAKL,MAAM,CAACG,GAAG,EAAE;EAAE,CAACC,SAAS,GAAGC;AAAO,CAAC,CAAC;AAC5F,MAAMC,WAAW,GAAG,CAACH,GAAG,EAAE;EAAEI,KAAK;EAAEC;AAAW,CAAC,KAC7CR,MAAM,CAACG,GAAG,EAAE;EAAE,CAACI,KAAK,GAAGC,UAAU,CAACC,MAAM,CAACP,eAAe,EAAE,CAAC,CAAC;AAAE,CAAC,CAAC;AAElEQ,MAAM,CAACC,OAAO,GAAG,CAACC,eAAe,EAAEC,YAAY,KAAK;EAClD,MAAMC,sBAAsB,GAAGF,eAAe,CAACH,MAAM,CAACH,WAAW,EAAE,CAAC,CAAC,CAAC;EACtE,MAAMS,mBAAmB,GAAGF,YAAY,CAACJ,MAAM,CAACH,WAAW,EAAE,CAAC,CAAC,CAAC;EAEhE,OAAOP,IAAI,CAACe,sBAAsB,CAAC,CAACE,GAAG,CAACT,KAAK,IAAI;IAC/C,MAAMC,UAAU,GAAGM,sBAAsB,CAACP,KAAK,CAAC;IAChD,OAAO;MACLA,KAAK;MACLC,UAAU,EAAET,IAAI,CAACS,UAAU,CAAC,CAACQ,GAAG,CAACZ,SAAS,IAAI;QAC5C,MAAMC,MAAM,GAAGG,UAAU,CAACJ,SAAS,CAAC;QACpC,MAAMa,cAAc,GAAGpB,eAAe,CAACQ,MAAM,CAAC,GAC1CU,mBAAmB,CAACR,KAAK,CAAC,CAACH,SAAS,CAAC,GACrCC,MAAM;QAEV,OAAO;UAAED,SAAS,EAAEc,MAAM,CAACd,SAAS,CAAC;UAAEC,MAAM,EAAEY;QAAe,CAAC;MACjE,CAAC;IACH,CAAC;EACH,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}