{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Decoder = require('../../../decoder');\nconst {\n  parse: parseV0\n} = require('../v0/response');\n\n/**\n * Starting in version 1, on quota violation, brokers send out responses before throttling.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-219+-+Improve+quota+communication\n * Version 1 also introduces a new resource pattern type field.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-290%3A+Support+for+Prefixed+ACLs\n *\n * DeleteAcls Response (Version: 1) => throttle_time_ms [filter_responses]\n *   throttle_time_ms => INT32\n *   filter_responses => error_code error_message [matching_acls]\n *     error_code => INT16\n *     error_message => NULLABLE_STRING\n *     matching_acls => error_code error_message resource_type resource_name resource_pattern_type principal host operation permission_type\n *       error_code => INT16\n *       error_message => NULLABLE_STRING\n *       resource_type => INT8\n *       resource_name => STRING\n *       resource_pattern_type => INT8\n *       principal => STRING\n *       host => STRING\n *       operation => INT8\n *       permission_type => INT8\n */\n\nconst decodeMatchingAcls = decoder => ({\n  errorCode: decoder.readInt16(),\n  errorMessage: decoder.readString(),\n  resourceType: decoder.readInt8(),\n  resourceName: decoder.readString(),\n  resourcePatternType: decoder.readInt8(),\n  principal: decoder.readString(),\n  host: decoder.readString(),\n  operation: decoder.readInt8(),\n  permissionType: decoder.readInt8()\n});\nconst decodeFilterResponse = decoder => ({\n  errorCode: decoder.readInt16(),\n  errorMessage: decoder.readString(),\n  matchingAcls: decoder.readArray(decodeMatchingAcls)\n});\nconst decode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (rawData) {\n    const decoder = new Decoder(rawData);\n    const throttleTime = decoder.readInt32();\n    const filterResponses = decoder.readArray(decodeFilterResponse);\n    return {\n      throttleTime: 0,\n      clientSideThrottleTime: throttleTime,\n      filterResponses\n    };\n  });\n  return function decode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  decode,\n  parse: parseV0\n};","map":{"version":3,"names":["Decoder","require","parse","parseV0","decodeMatchingAcls","decoder","errorCode","readInt16","errorMessage","readString","resourceType","readInt8","resourceName","resourcePatternType","principal","host","operation","permissionType","decodeFilterResponse","matchingAcls","readArray","decode","rawData","throttleTime","readInt32","filterResponses","clientSideThrottleTime","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/deleteAcls/v1/response.js"],"sourcesContent":["const Decoder = require('../../../decoder')\nconst { parse: parseV0 } = require('../v0/response')\n\n/**\n * Starting in version 1, on quota violation, brokers send out responses before throttling.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-219+-+Improve+quota+communication\n * Version 1 also introduces a new resource pattern type field.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-290%3A+Support+for+Prefixed+ACLs\n *\n * DeleteAcls Response (Version: 1) => throttle_time_ms [filter_responses]\n *   throttle_time_ms => INT32\n *   filter_responses => error_code error_message [matching_acls]\n *     error_code => INT16\n *     error_message => NULLABLE_STRING\n *     matching_acls => error_code error_message resource_type resource_name resource_pattern_type principal host operation permission_type\n *       error_code => INT16\n *       error_message => NULLABLE_STRING\n *       resource_type => INT8\n *       resource_name => STRING\n *       resource_pattern_type => INT8\n *       principal => STRING\n *       host => STRING\n *       operation => INT8\n *       permission_type => INT8\n */\n\nconst decodeMatchingAcls = decoder => ({\n  errorCode: decoder.readInt16(),\n  errorMessage: decoder.readString(),\n  resourceType: decoder.readInt8(),\n  resourceName: decoder.readString(),\n  resourcePatternType: decoder.readInt8(),\n  principal: decoder.readString(),\n  host: decoder.readString(),\n  operation: decoder.readInt8(),\n  permissionType: decoder.readInt8(),\n})\n\nconst decodeFilterResponse = decoder => ({\n  errorCode: decoder.readInt16(),\n  errorMessage: decoder.readString(),\n  matchingAcls: decoder.readArray(decodeMatchingAcls),\n})\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n  const throttleTime = decoder.readInt32()\n  const filterResponses = decoder.readArray(decodeFilterResponse)\n\n  return {\n    throttleTime: 0,\n    clientSideThrottleTime: throttleTime,\n    filterResponses,\n  }\n}\n\nmodule.exports = {\n  decode,\n  parse: parseV0,\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC,KAAK,EAAEC;AAAQ,CAAC,GAAGF,OAAO,CAAC,gBAAgB,CAAC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,kBAAkB,GAAGC,OAAO,KAAK;EACrCC,SAAS,EAAED,OAAO,CAACE,SAAS,EAAE;EAC9BC,YAAY,EAAEH,OAAO,CAACI,UAAU,EAAE;EAClCC,YAAY,EAAEL,OAAO,CAACM,QAAQ,EAAE;EAChCC,YAAY,EAAEP,OAAO,CAACI,UAAU,EAAE;EAClCI,mBAAmB,EAAER,OAAO,CAACM,QAAQ,EAAE;EACvCG,SAAS,EAAET,OAAO,CAACI,UAAU,EAAE;EAC/BM,IAAI,EAAEV,OAAO,CAACI,UAAU,EAAE;EAC1BO,SAAS,EAAEX,OAAO,CAACM,QAAQ,EAAE;EAC7BM,cAAc,EAAEZ,OAAO,CAACM,QAAQ;AAClC,CAAC,CAAC;AAEF,MAAMO,oBAAoB,GAAGb,OAAO,KAAK;EACvCC,SAAS,EAAED,OAAO,CAACE,SAAS,EAAE;EAC9BC,YAAY,EAAEH,OAAO,CAACI,UAAU,EAAE;EAClCU,YAAY,EAAEd,OAAO,CAACe,SAAS,CAAChB,kBAAkB;AACpD,CAAC,CAAC;AAEF,MAAMiB,MAAM;EAAA,6BAAG,WAAMC,OAAO,EAAI;IAC9B,MAAMjB,OAAO,GAAG,IAAIL,OAAO,CAACsB,OAAO,CAAC;IACpC,MAAMC,YAAY,GAAGlB,OAAO,CAACmB,SAAS,EAAE;IACxC,MAAMC,eAAe,GAAGpB,OAAO,CAACe,SAAS,CAACF,oBAAoB,CAAC;IAE/D,OAAO;MACLK,YAAY,EAAE,CAAC;MACfG,sBAAsB,EAAEH,YAAY;MACpCE;IACF,CAAC;EACH,CAAC;EAAA,gBAVKJ,MAAM;IAAA;EAAA;AAAA,GAUX;AAEDM,MAAM,CAACC,OAAO,GAAG;EACfP,MAAM;EACNnB,KAAK,EAAEC;AACT,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}