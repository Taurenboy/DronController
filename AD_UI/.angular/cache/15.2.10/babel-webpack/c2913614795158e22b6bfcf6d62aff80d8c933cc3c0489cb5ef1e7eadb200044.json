{"ast":null,"code":"const swapObject = require('../utils/swapObject');\nconst InstrumentationEventType = require('../instrumentation/eventType');\nconst networkEvents = require('../network/instrumentationEvents');\nconst consumerType = InstrumentationEventType('consumer');\n\n/** @type {import('types').ConsumerEvents} */\nconst events = {\n  HEARTBEAT: consumerType('heartbeat'),\n  COMMIT_OFFSETS: consumerType('commit_offsets'),\n  GROUP_JOIN: consumerType('group_join'),\n  FETCH: consumerType('fetch'),\n  FETCH_START: consumerType('fetch_start'),\n  START_BATCH_PROCESS: consumerType('start_batch_process'),\n  END_BATCH_PROCESS: consumerType('end_batch_process'),\n  CONNECT: consumerType('connect'),\n  DISCONNECT: consumerType('disconnect'),\n  STOP: consumerType('stop'),\n  CRASH: consumerType('crash'),\n  REBALANCING: consumerType('rebalancing'),\n  RECEIVED_UNSUBSCRIBED_TOPICS: consumerType('received_unsubscribed_topics'),\n  REQUEST: consumerType(networkEvents.NETWORK_REQUEST),\n  REQUEST_TIMEOUT: consumerType(networkEvents.NETWORK_REQUEST_TIMEOUT),\n  REQUEST_QUEUE_SIZE: consumerType(networkEvents.NETWORK_REQUEST_QUEUE_SIZE)\n};\nconst wrappedEvents = {\n  [events.REQUEST]: networkEvents.NETWORK_REQUEST,\n  [events.REQUEST_TIMEOUT]: networkEvents.NETWORK_REQUEST_TIMEOUT,\n  [events.REQUEST_QUEUE_SIZE]: networkEvents.NETWORK_REQUEST_QUEUE_SIZE\n};\nconst reversedWrappedEvents = swapObject(wrappedEvents);\nconst unwrap = eventName => wrappedEvents[eventName] || eventName;\nconst wrap = eventName => reversedWrappedEvents[eventName] || eventName;\nmodule.exports = {\n  events,\n  wrap,\n  unwrap\n};","map":{"version":3,"names":["swapObject","require","InstrumentationEventType","networkEvents","consumerType","events","HEARTBEAT","COMMIT_OFFSETS","GROUP_JOIN","FETCH","FETCH_START","START_BATCH_PROCESS","END_BATCH_PROCESS","CONNECT","DISCONNECT","STOP","CRASH","REBALANCING","RECEIVED_UNSUBSCRIBED_TOPICS","REQUEST","NETWORK_REQUEST","REQUEST_TIMEOUT","NETWORK_REQUEST_TIMEOUT","REQUEST_QUEUE_SIZE","NETWORK_REQUEST_QUEUE_SIZE","wrappedEvents","reversedWrappedEvents","unwrap","eventName","wrap","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/consumer/instrumentationEvents.js"],"sourcesContent":["const swapObject = require('../utils/swapObject')\nconst InstrumentationEventType = require('../instrumentation/eventType')\nconst networkEvents = require('../network/instrumentationEvents')\nconst consumerType = InstrumentationEventType('consumer')\n\n/** @type {import('types').ConsumerEvents} */\nconst events = {\n  HEARTBEAT: consumerType('heartbeat'),\n  COMMIT_OFFSETS: consumerType('commit_offsets'),\n  GROUP_JOIN: consumerType('group_join'),\n  FETCH: consumerType('fetch'),\n  FETCH_START: consumerType('fetch_start'),\n  START_BATCH_PROCESS: consumerType('start_batch_process'),\n  END_BATCH_PROCESS: consumerType('end_batch_process'),\n  CONNECT: consumerType('connect'),\n  DISCONNECT: consumerType('disconnect'),\n  STOP: consumerType('stop'),\n  CRASH: consumerType('crash'),\n  REBALANCING: consumerType('rebalancing'),\n  RECEIVED_UNSUBSCRIBED_TOPICS: consumerType('received_unsubscribed_topics'),\n  REQUEST: consumerType(networkEvents.NETWORK_REQUEST),\n  REQUEST_TIMEOUT: consumerType(networkEvents.NETWORK_REQUEST_TIMEOUT),\n  REQUEST_QUEUE_SIZE: consumerType(networkEvents.NETWORK_REQUEST_QUEUE_SIZE),\n}\n\nconst wrappedEvents = {\n  [events.REQUEST]: networkEvents.NETWORK_REQUEST,\n  [events.REQUEST_TIMEOUT]: networkEvents.NETWORK_REQUEST_TIMEOUT,\n  [events.REQUEST_QUEUE_SIZE]: networkEvents.NETWORK_REQUEST_QUEUE_SIZE,\n}\n\nconst reversedWrappedEvents = swapObject(wrappedEvents)\nconst unwrap = eventName => wrappedEvents[eventName] || eventName\nconst wrap = eventName => reversedWrappedEvents[eventName] || eventName\n\nmodule.exports = {\n  events,\n  wrap,\n  unwrap,\n}\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACjD,MAAMC,wBAAwB,GAAGD,OAAO,CAAC,8BAA8B,CAAC;AACxE,MAAME,aAAa,GAAGF,OAAO,CAAC,kCAAkC,CAAC;AACjE,MAAMG,YAAY,GAAGF,wBAAwB,CAAC,UAAU,CAAC;;AAEzD;AACA,MAAMG,MAAM,GAAG;EACbC,SAAS,EAAEF,YAAY,CAAC,WAAW,CAAC;EACpCG,cAAc,EAAEH,YAAY,CAAC,gBAAgB,CAAC;EAC9CI,UAAU,EAAEJ,YAAY,CAAC,YAAY,CAAC;EACtCK,KAAK,EAAEL,YAAY,CAAC,OAAO,CAAC;EAC5BM,WAAW,EAAEN,YAAY,CAAC,aAAa,CAAC;EACxCO,mBAAmB,EAAEP,YAAY,CAAC,qBAAqB,CAAC;EACxDQ,iBAAiB,EAAER,YAAY,CAAC,mBAAmB,CAAC;EACpDS,OAAO,EAAET,YAAY,CAAC,SAAS,CAAC;EAChCU,UAAU,EAAEV,YAAY,CAAC,YAAY,CAAC;EACtCW,IAAI,EAAEX,YAAY,CAAC,MAAM,CAAC;EAC1BY,KAAK,EAAEZ,YAAY,CAAC,OAAO,CAAC;EAC5Ba,WAAW,EAAEb,YAAY,CAAC,aAAa,CAAC;EACxCc,4BAA4B,EAAEd,YAAY,CAAC,8BAA8B,CAAC;EAC1Ee,OAAO,EAAEf,YAAY,CAACD,aAAa,CAACiB,eAAe,CAAC;EACpDC,eAAe,EAAEjB,YAAY,CAACD,aAAa,CAACmB,uBAAuB,CAAC;EACpEC,kBAAkB,EAAEnB,YAAY,CAACD,aAAa,CAACqB,0BAA0B;AAC3E,CAAC;AAED,MAAMC,aAAa,GAAG;EACpB,CAACpB,MAAM,CAACc,OAAO,GAAGhB,aAAa,CAACiB,eAAe;EAC/C,CAACf,MAAM,CAACgB,eAAe,GAAGlB,aAAa,CAACmB,uBAAuB;EAC/D,CAACjB,MAAM,CAACkB,kBAAkB,GAAGpB,aAAa,CAACqB;AAC7C,CAAC;AAED,MAAME,qBAAqB,GAAG1B,UAAU,CAACyB,aAAa,CAAC;AACvD,MAAME,MAAM,GAAGC,SAAS,IAAIH,aAAa,CAACG,SAAS,CAAC,IAAIA,SAAS;AACjE,MAAMC,IAAI,GAAGD,SAAS,IAAIF,qBAAqB,CAACE,SAAS,CAAC,IAAIA,SAAS;AAEvEE,MAAM,CAACC,OAAO,GAAG;EACf1B,MAAM;EACNwB,IAAI;EACJF;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}