{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Encoder = require('../../../encoder');\nconst {\n  AlterConfigs: apiKey\n} = require('../../apiKeys');\n\n/**\n * AlterConfigs Request (Version: 0) => [resources] validate_only\n *   resources => resource_type resource_name [config_entries]\n *     resource_type => INT8\n *     resource_name => STRING\n *     config_entries => config_name config_value\n *       config_name => STRING\n *       config_value => NULLABLE_STRING\n *   validate_only => BOOLEAN\n */\n\n/**\n * @param {Array} resources An array of resources to change\n * @param {boolean} [validateOnly=false]\n */\nmodule.exports = ({\n  resources,\n  validateOnly = false\n}) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'AlterConfigs',\n  encode: function () {\n    var _ref = _asyncToGenerator(function* () {\n      return new Encoder().writeArray(resources.map(encodeResource)).writeBoolean(validateOnly);\n    });\n    return function encode() {\n      return _ref.apply(this, arguments);\n    };\n  }()\n});\nconst encodeResource = ({\n  type,\n  name,\n  configEntries\n}) => {\n  return new Encoder().writeInt8(type).writeString(name).writeArray(configEntries.map(encodeConfigEntries));\n};\nconst encodeConfigEntries = ({\n  name,\n  value\n}) => {\n  return new Encoder().writeString(name).writeString(value);\n};","map":{"version":3,"names":["Encoder","require","AlterConfigs","apiKey","module","exports","resources","validateOnly","apiVersion","apiName","encode","writeArray","map","encodeResource","writeBoolean","type","name","configEntries","writeInt8","writeString","encodeConfigEntries","value"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/alterConfigs/v0/request.js"],"sourcesContent":["const Encoder = require('../../../encoder')\nconst { AlterConfigs: apiKey } = require('../../apiKeys')\n\n/**\n * AlterConfigs Request (Version: 0) => [resources] validate_only\n *   resources => resource_type resource_name [config_entries]\n *     resource_type => INT8\n *     resource_name => STRING\n *     config_entries => config_name config_value\n *       config_name => STRING\n *       config_value => NULLABLE_STRING\n *   validate_only => BOOLEAN\n */\n\n/**\n * @param {Array} resources An array of resources to change\n * @param {boolean} [validateOnly=false]\n */\nmodule.exports = ({ resources, validateOnly = false }) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'AlterConfigs',\n  encode: async () => {\n    return new Encoder().writeArray(resources.map(encodeResource)).writeBoolean(validateOnly)\n  },\n})\n\nconst encodeResource = ({ type, name, configEntries }) => {\n  return new Encoder()\n    .writeInt8(type)\n    .writeString(name)\n    .writeArray(configEntries.map(encodeConfigEntries))\n}\n\nconst encodeConfigEntries = ({ name, value }) => {\n  return new Encoder().writeString(name).writeString(value)\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC,YAAY,EAAEC;AAAO,CAAC,GAAGF,OAAO,CAAC,eAAe,CAAC;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAG,MAAM,CAACC,OAAO,GAAG,CAAC;EAAEC,SAAS;EAAEC,YAAY,GAAG;AAAM,CAAC,MAAM;EACzDJ,MAAM;EACNK,UAAU,EAAE,CAAC;EACbC,OAAO,EAAE,cAAc;EACvBC,MAAM;IAAA,6BAAE,aAAY;MAClB,OAAO,IAAIV,OAAO,EAAE,CAACW,UAAU,CAACL,SAAS,CAACM,GAAG,CAACC,cAAc,CAAC,CAAC,CAACC,YAAY,CAACP,YAAY,CAAC;IAC3F,CAAC;IAAA;MAAA;IAAA;EAAA;AACH,CAAC,CAAC;AAEF,MAAMM,cAAc,GAAG,CAAC;EAAEE,IAAI;EAAEC,IAAI;EAAEC;AAAc,CAAC,KAAK;EACxD,OAAO,IAAIjB,OAAO,EAAE,CACjBkB,SAAS,CAACH,IAAI,CAAC,CACfI,WAAW,CAACH,IAAI,CAAC,CACjBL,UAAU,CAACM,aAAa,CAACL,GAAG,CAACQ,mBAAmB,CAAC,CAAC;AACvD,CAAC;AAED,MAAMA,mBAAmB,GAAG,CAAC;EAAEJ,IAAI;EAAEK;AAAM,CAAC,KAAK;EAC/C,OAAO,IAAIrB,OAAO,EAAE,CAACmB,WAAW,CAACH,IAAI,CAAC,CAACG,WAAW,CAACE,KAAK,CAAC;AAC3D,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}