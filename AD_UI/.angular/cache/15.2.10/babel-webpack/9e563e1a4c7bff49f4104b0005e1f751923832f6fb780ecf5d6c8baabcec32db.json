{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Encoder = require('../../../encoder');\nconst {\n  LeaveGroup: apiKey\n} = require('../../apiKeys');\n\n/**\n * Version 3 changes leavegroup to operate on a batch of members\n * and adds group_instance_id to identify members across restarts.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-345%3A+Introduce+static+membership+protocol+to+reduce+consumer+rebalances\n *\n * LeaveGroup Request (Version: 3) => group_id [members]\n *   group_id => STRING\n *   members => member_id group_instance_id\n *     member_id => STRING\n *     group_instance_id => NULLABLE_STRING\n */\n\nmodule.exports = ({\n  groupId,\n  members\n}) => ({\n  apiKey,\n  apiVersion: 3,\n  apiName: 'LeaveGroup',\n  encode: function () {\n    var _ref = _asyncToGenerator(function* () {\n      return new Encoder().writeString(groupId).writeArray(members.map(member => encodeMember(member)));\n    });\n    return function encode() {\n      return _ref.apply(this, arguments);\n    };\n  }()\n});\nconst encodeMember = ({\n  memberId,\n  groupInstanceId = null\n}) => {\n  return new Encoder().writeString(memberId).writeString(groupInstanceId);\n};","map":{"version":3,"names":["Encoder","require","LeaveGroup","apiKey","module","exports","groupId","members","apiVersion","apiName","encode","writeString","writeArray","map","member","encodeMember","memberId","groupInstanceId"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/leaveGroup/v3/request.js"],"sourcesContent":["const Encoder = require('../../../encoder')\nconst { LeaveGroup: apiKey } = require('../../apiKeys')\n\n/**\n * Version 3 changes leavegroup to operate on a batch of members\n * and adds group_instance_id to identify members across restarts.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-345%3A+Introduce+static+membership+protocol+to+reduce+consumer+rebalances\n *\n * LeaveGroup Request (Version: 3) => group_id [members]\n *   group_id => STRING\n *   members => member_id group_instance_id\n *     member_id => STRING\n *     group_instance_id => NULLABLE_STRING\n */\n\nmodule.exports = ({ groupId, members }) => ({\n  apiKey,\n  apiVersion: 3,\n  apiName: 'LeaveGroup',\n  encode: async () => {\n    return new Encoder()\n      .writeString(groupId)\n      .writeArray(members.map(member => encodeMember(member)))\n  },\n})\n\nconst encodeMember = ({ memberId, groupInstanceId = null }) => {\n  return new Encoder().writeString(memberId).writeString(groupInstanceId)\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC,UAAU,EAAEC;AAAO,CAAC,GAAGF,OAAO,CAAC,eAAe,CAAC;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAG,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,MAAM;EAC1CJ,MAAM;EACNK,UAAU,EAAE,CAAC;EACbC,OAAO,EAAE,YAAY;EACrBC,MAAM;IAAA,6BAAE,aAAY;MAClB,OAAO,IAAIV,OAAO,EAAE,CACjBW,WAAW,CAACL,OAAO,CAAC,CACpBM,UAAU,CAACL,OAAO,CAACM,GAAG,CAACC,MAAM,IAAIC,YAAY,CAACD,MAAM,CAAC,CAAC,CAAC;IAC5D,CAAC;IAAA;MAAA;IAAA;EAAA;AACH,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG,CAAC;EAAEC,QAAQ;EAAEC,eAAe,GAAG;AAAK,CAAC,KAAK;EAC7D,OAAO,IAAIjB,OAAO,EAAE,CAACW,WAAW,CAACK,QAAQ,CAAC,CAACL,WAAW,CAACM,eAAe,CAAC;AACzE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}