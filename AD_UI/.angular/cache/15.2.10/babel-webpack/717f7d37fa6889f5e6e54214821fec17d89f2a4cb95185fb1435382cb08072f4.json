{"ast":null,"code":"const NETWORK_DELAY = 5000;\n\n/**\n * @see https://github.com/apache/kafka/pull/5203\n * The JOIN_GROUP request may block up to sessionTimeout (or rebalanceTimeout in JoinGroupV1),\n * so we should override the requestTimeout to be a bit more than the sessionTimeout\n * NOTE: the sessionTimeout can be configured as Number.MAX_SAFE_INTEGER and overflow when\n * increased, so we have to check for potential overflows\n **/\nconst requestTimeout = ({\n  rebalanceTimeout,\n  sessionTimeout\n}) => {\n  const timeout = rebalanceTimeout || sessionTimeout;\n  return Number.isSafeInteger(timeout + NETWORK_DELAY) ? timeout + NETWORK_DELAY : timeout;\n};\nconst logResponseError = memberId => memberId != null && memberId !== '';\nconst versions = {\n  0: ({\n    groupId,\n    sessionTimeout,\n    memberId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v0/request');\n    const response = require('./v0/response');\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        memberId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout: null,\n        sessionTimeout\n      })\n    };\n  },\n  1: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v1/request');\n    const response = require('./v1/response');\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout,\n        sessionTimeout\n      })\n    };\n  },\n  2: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v2/request');\n    const response = require('./v2/response');\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout,\n        sessionTimeout\n      })\n    };\n  },\n  3: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v3/request');\n    const response = require('./v3/response');\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout,\n        sessionTimeout\n      })\n    };\n  },\n  4: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v4/request');\n    const response = require('./v4/response');\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout,\n        sessionTimeout\n      }),\n      logResponseError: logResponseError(memberId)\n    };\n  },\n  5: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    groupInstanceId,\n    protocolType,\n    groupProtocols\n  }) => {\n    const request = require('./v5/request');\n    const response = require('./v5/response');\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        groupInstanceId,\n        protocolType,\n        groupProtocols\n      }),\n      response,\n      requestTimeout: requestTimeout({\n        rebalanceTimeout,\n        sessionTimeout\n      }),\n      logResponseError: logResponseError(memberId)\n    };\n  }\n};\nmodule.exports = {\n  versions: Object.keys(versions),\n  protocol: ({\n    version\n  }) => versions[version]\n};","map":{"version":3,"names":["NETWORK_DELAY","requestTimeout","rebalanceTimeout","sessionTimeout","timeout","Number","isSafeInteger","logResponseError","memberId","versions","groupId","protocolType","groupProtocols","request","require","response","groupInstanceId","module","exports","Object","keys","protocol","version"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/joinGroup/index.js"],"sourcesContent":["const NETWORK_DELAY = 5000\n\n/**\n * @see https://github.com/apache/kafka/pull/5203\n * The JOIN_GROUP request may block up to sessionTimeout (or rebalanceTimeout in JoinGroupV1),\n * so we should override the requestTimeout to be a bit more than the sessionTimeout\n * NOTE: the sessionTimeout can be configured as Number.MAX_SAFE_INTEGER and overflow when\n * increased, so we have to check for potential overflows\n **/\nconst requestTimeout = ({ rebalanceTimeout, sessionTimeout }) => {\n  const timeout = rebalanceTimeout || sessionTimeout\n  return Number.isSafeInteger(timeout + NETWORK_DELAY) ? timeout + NETWORK_DELAY : timeout\n}\n\nconst logResponseError = memberId => memberId != null && memberId !== ''\n\nconst versions = {\n  0: ({ groupId, sessionTimeout, memberId, protocolType, groupProtocols }) => {\n    const request = require('./v0/request')\n    const response = require('./v0/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        memberId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout: null, sessionTimeout }),\n    }\n  },\n  1: ({ groupId, sessionTimeout, rebalanceTimeout, memberId, protocolType, groupProtocols }) => {\n    const request = require('./v1/request')\n    const response = require('./v1/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout, sessionTimeout }),\n    }\n  },\n  2: ({ groupId, sessionTimeout, rebalanceTimeout, memberId, protocolType, groupProtocols }) => {\n    const request = require('./v2/request')\n    const response = require('./v2/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout, sessionTimeout }),\n    }\n  },\n  3: ({ groupId, sessionTimeout, rebalanceTimeout, memberId, protocolType, groupProtocols }) => {\n    const request = require('./v3/request')\n    const response = require('./v3/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout, sessionTimeout }),\n    }\n  },\n  4: ({ groupId, sessionTimeout, rebalanceTimeout, memberId, protocolType, groupProtocols }) => {\n    const request = require('./v4/request')\n    const response = require('./v4/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout, sessionTimeout }),\n      logResponseError: logResponseError(memberId),\n    }\n  },\n  5: ({\n    groupId,\n    sessionTimeout,\n    rebalanceTimeout,\n    memberId,\n    groupInstanceId,\n    protocolType,\n    groupProtocols,\n  }) => {\n    const request = require('./v5/request')\n    const response = require('./v5/response')\n\n    return {\n      request: request({\n        groupId,\n        sessionTimeout,\n        rebalanceTimeout,\n        memberId,\n        groupInstanceId,\n        protocolType,\n        groupProtocols,\n      }),\n      response,\n      requestTimeout: requestTimeout({ rebalanceTimeout, sessionTimeout }),\n      logResponseError: logResponseError(memberId),\n    }\n  },\n}\n\nmodule.exports = {\n  versions: Object.keys(versions),\n  protocol: ({ version }) => versions[version],\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}