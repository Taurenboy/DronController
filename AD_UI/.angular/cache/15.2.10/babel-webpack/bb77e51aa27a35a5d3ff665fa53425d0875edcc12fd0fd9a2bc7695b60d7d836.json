{"ast":null,"code":"const {\n  EventEmitter\n} = require('events');\nconst {\n  KafkaJSNonRetriableError\n} = require('../../errors');\nconst STATES = require('./transactionStates');\nconst VALID_STATE_TRANSITIONS = {\n  [STATES.UNINITIALIZED]: [STATES.READY],\n  [STATES.READY]: [STATES.READY, STATES.TRANSACTING],\n  [STATES.TRANSACTING]: [STATES.COMMITTING, STATES.ABORTING],\n  [STATES.COMMITTING]: [STATES.READY],\n  [STATES.ABORTING]: [STATES.READY]\n};\nmodule.exports = ({\n  logger,\n  initialState = STATES.UNINITIALIZED\n}) => {\n  let currentState = initialState;\n  const guard = (object, method, {\n    legalStates,\n    async: isAsync = true\n  }) => {\n    if (!object[method]) {\n      throw new KafkaJSNonRetriableError(`Cannot add guard on missing method \"${method}\"`);\n    }\n    return (...args) => {\n      const fn = object[method];\n      if (!legalStates.includes(currentState)) {\n        const error = new KafkaJSNonRetriableError(`Transaction state exception: Cannot call \"${method}\" in state \"${currentState}\"`);\n        if (isAsync) {\n          return Promise.reject(error);\n        } else {\n          throw error;\n        }\n      }\n      return fn.apply(object, args);\n    };\n  };\n  const stateMachine = Object.assign(new EventEmitter(), {\n    /**\n     * Create a clone of \"object\" where we ensure state machine is in correct state\n     * prior to calling any of the configured methods\n     * @param {Object} object The object whose methods we will guard\n     * @param {Object} methodStateMapping Keys are method names on \"object\"\n     * @param {string[]} methodStateMapping.legalStates Legal states for this method\n     * @param {boolean=true} methodStateMapping.async Whether this method is async (throw vs reject)\n     */\n    createGuarded(object, methodStateMapping) {\n      const guardedMethods = Object.keys(methodStateMapping).reduce((guards, method) => {\n        guards[method] = guard(object, method, methodStateMapping[method]);\n        return guards;\n      }, {});\n      return {\n        ...object,\n        ...guardedMethods\n      };\n    },\n    /**\n     * Transition safely to a new state\n     */\n    transitionTo(state) {\n      logger.debug(`Transaction state transition ${currentState} --> ${state}`);\n      if (!VALID_STATE_TRANSITIONS[currentState].includes(state)) {\n        throw new KafkaJSNonRetriableError(`Transaction state exception: Invalid transition ${currentState} --> ${state}`);\n      }\n      stateMachine.emit('transition', {\n        to: state,\n        from: currentState\n      });\n      currentState = state;\n    },\n    state() {\n      return currentState;\n    }\n  });\n  return stateMachine;\n};","map":{"version":3,"names":["EventEmitter","require","KafkaJSNonRetriableError","STATES","VALID_STATE_TRANSITIONS","UNINITIALIZED","READY","TRANSACTING","COMMITTING","ABORTING","module","exports","logger","initialState","currentState","guard","object","method","legalStates","async","isAsync","args","fn","includes","error","Promise","reject","apply","stateMachine","Object","assign","createGuarded","methodStateMapping","guardedMethods","keys","reduce","guards","transitionTo","state","debug","emit","to","from"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/producer/eosManager/transactionStateMachine.js"],"sourcesContent":["const { EventEmitter } = require('events')\nconst { KafkaJSNonRetriableError } = require('../../errors')\nconst STATES = require('./transactionStates')\n\nconst VALID_STATE_TRANSITIONS = {\n  [STATES.UNINITIALIZED]: [STATES.READY],\n  [STATES.READY]: [STATES.READY, STATES.TRANSACTING],\n  [STATES.TRANSACTING]: [STATES.COMMITTING, STATES.ABORTING],\n  [STATES.COMMITTING]: [STATES.READY],\n  [STATES.ABORTING]: [STATES.READY],\n}\n\nmodule.exports = ({ logger, initialState = STATES.UNINITIALIZED }) => {\n  let currentState = initialState\n\n  const guard = (object, method, { legalStates, async: isAsync = true }) => {\n    if (!object[method]) {\n      throw new KafkaJSNonRetriableError(`Cannot add guard on missing method \"${method}\"`)\n    }\n\n    return (...args) => {\n      const fn = object[method]\n\n      if (!legalStates.includes(currentState)) {\n        const error = new KafkaJSNonRetriableError(\n          `Transaction state exception: Cannot call \"${method}\" in state \"${currentState}\"`\n        )\n\n        if (isAsync) {\n          return Promise.reject(error)\n        } else {\n          throw error\n        }\n      }\n\n      return fn.apply(object, args)\n    }\n  }\n\n  const stateMachine = Object.assign(new EventEmitter(), {\n    /**\n     * Create a clone of \"object\" where we ensure state machine is in correct state\n     * prior to calling any of the configured methods\n     * @param {Object} object The object whose methods we will guard\n     * @param {Object} methodStateMapping Keys are method names on \"object\"\n     * @param {string[]} methodStateMapping.legalStates Legal states for this method\n     * @param {boolean=true} methodStateMapping.async Whether this method is async (throw vs reject)\n     */\n    createGuarded(object, methodStateMapping) {\n      const guardedMethods = Object.keys(methodStateMapping).reduce((guards, method) => {\n        guards[method] = guard(object, method, methodStateMapping[method])\n        return guards\n      }, {})\n\n      return { ...object, ...guardedMethods }\n    },\n    /**\n     * Transition safely to a new state\n     */\n    transitionTo(state) {\n      logger.debug(`Transaction state transition ${currentState} --> ${state}`)\n\n      if (!VALID_STATE_TRANSITIONS[currentState].includes(state)) {\n        throw new KafkaJSNonRetriableError(\n          `Transaction state exception: Invalid transition ${currentState} --> ${state}`\n        )\n      }\n\n      stateMachine.emit('transition', { to: state, from: currentState })\n      currentState = state\n    },\n\n    state() {\n      return currentState\n    },\n  })\n\n  return stateMachine\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}