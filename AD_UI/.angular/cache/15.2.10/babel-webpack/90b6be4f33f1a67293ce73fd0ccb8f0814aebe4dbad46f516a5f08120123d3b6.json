{"ast":null,"code":"import { io } from 'socket.io-client';\nimport * as i0 from \"@angular/core\";\nexport class SocketService {\n  constructor() {\n    // Configura la conexión al servidor de sockets\n    this.socket = io('http://localhost:3000', {\n      query: {\n        appName: 'AD_UI' // Nombre de la aplicación\n      },\n\n      transports: ['websocket', 'polling']\n    });\n  }\n  sendMessage(message) {\n    this.socket.emit('chatMessage', message);\n  }\n  startDronesApps() {\n    this.socket.emit('start-drone');\n  }\n  startDroneMovement() {\n    this.socket.emit('start-movement');\n  }\n  resetDronesPositions() {\n    this.socket.emit('reset-drone-position');\n  }\n  onMessageReceived(callback) {\n    this.socket.on('tablero', message => {\n      callback(message);\n    });\n  }\n  static #_ = this.ɵfac = function SocketService_Factory(t) {\n    return new (t || SocketService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SocketService,\n    factory: SocketService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,EAAE,QAAQ,kBAAkB;;AAKrC,OAAM,MAAOC,aAAa;EAGxBC;IACE;IACA,IAAI,CAACC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,EAAE;MACxCI,KAAK,EAAE;QACLC,OAAO,EAAE,OAAO,CAAE;OACnB;;MACDC,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS;KACpC,CAAC;EACJ;EAEAC,WAAW,CAACC,OAAe;IACzB,IAAI,CAACL,MAAM,CAACM,IAAI,CAAC,aAAa,EAAED,OAAO,CAAC;EAC1C;EAEAE,eAAe;IACb,IAAI,CAACP,MAAM,CAACM,IAAI,CAAC,aAAa,CAAC;EACjC;EAEAE,kBAAkB;IAChB,IAAI,CAACR,MAAM,CAACM,IAAI,CAAC,gBAAgB,CAAC;EACpC;EAEAG,oBAAoB;IAClB,IAAI,CAACT,MAAM,CAACM,IAAI,CAAC,sBAAsB,CAAC;EAC1C;EAGAI,iBAAiB,CAACC,QAAmC;IACnD,IAAI,CAACX,MAAM,CAACY,EAAE,CAAC,SAAS,EAAGP,OAAe,IAAI;MAC5CM,QAAQ,CAACN,OAAO,CAAC;IACnB,CAAC,CAAC;EACJ;EAAC;qBAlCUP,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAe,SAAbf,aAAa;IAAAgB,YAFZ;EAAM","names":["io","SocketService","constructor","socket","query","appName","transports","sendMessage","message","emit","startDronesApps","startDroneMovement","resetDronesPositions","onMessageReceived","callback","on","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ingev\\Documents\\Desarrollo\\Luna\\DronController\\AD_UI\\src\\app\\services\\socket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { io } from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocketService {\n  private socket: any;\n\n  constructor() {\n    // Configura la conexión al servidor de sockets\n    this.socket = io('http://localhost:3000', {\n      query: {\n        appName: 'AD_UI', // Nombre de la aplicación\n      },\n      transports: ['websocket', 'polling']\n    });\n  }\n\n  sendMessage(message: string) {\n    this.socket.emit('chatMessage', message);\n  }\n\n  startDronesApps() {\n    this.socket.emit('start-drone');\n  }\n\n  startDroneMovement() {\n    this.socket.emit('start-movement');\n  }\n\n  resetDronesPositions() {\n    this.socket.emit('reset-drone-position');\n  }\n\n\n  onMessageReceived(callback: (message: string) => void) {\n    this.socket.on('tablero', (message: string) => {\n      callback(message);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}