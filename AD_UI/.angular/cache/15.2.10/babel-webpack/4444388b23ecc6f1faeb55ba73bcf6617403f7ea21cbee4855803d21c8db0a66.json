{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Decoder = require('../../../decoder');\nconst {\n  failure,\n  createErrorFromCode\n} = require('../../../error');\n\n/**\n * ListPartitionReassignments Response (Version: 0) => throttle_time_ms error_code error_message [topics] TAG_BUFFER\n *  throttle_time_ms => INT32\n *  error_code => INT16\n *  error_message => COMPACT_NULLABLE_STRING\n *  topics => name [partitions] TAG_BUFFER\n *    name => COMPACT_STRING\n *    partitions => partition_index [replicas] [adding_replicas] [removing_replicas] TAG_BUFFER\n *      partition_index => INT32\n *       replicas => INT32\n *       adding_replicas => INT32\n *       removing_replicas => INT32\n */\n\nconst decodeReplicas = decoder => {\n  return decoder.readInt32();\n};\nconst decodePartitions = decoder => {\n  const partition = {\n    partition: decoder.readInt32(),\n    replicas: decoder.readUVarIntArray(decodeReplicas),\n    addingReplicas: decoder.readUVarIntArray(decodeReplicas),\n    removingReplicas: decoder.readUVarIntArray(decodeReplicas)\n  };\n\n  // Read tagged fields\n  decoder.readTaggedFields();\n  return partition;\n};\nconst decodeTopics = decoder => {\n  const topic = {\n    name: decoder.readUVarIntString(),\n    partitions: decoder.readUVarIntArray(decodePartitions)\n  };\n\n  // Read tagged fields\n  decoder.readTaggedFields();\n  return topic;\n};\nconst decode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (rawData) {\n    const decoder = new Decoder(rawData);\n\n    // Read tagged fields\n    decoder.readTaggedFields();\n    const throttleTime = decoder.readInt32();\n    const errorCode = decoder.readInt16();\n    // Read error message\n    decoder.readUVarIntString();\n    return {\n      throttleTime,\n      errorCode,\n      topics: decoder.readUVarIntArray(decodeTopics)\n    };\n  });\n  return function decode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst parse = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (data) {\n    if (failure(data.errorCode)) {\n      throw createErrorFromCode(data.errorCode);\n    }\n    return data;\n  });\n  return function parse(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  decode,\n  parse\n};","map":{"version":3,"names":["Decoder","require","failure","createErrorFromCode","decodeReplicas","decoder","readInt32","decodePartitions","partition","replicas","readUVarIntArray","addingReplicas","removingReplicas","readTaggedFields","decodeTopics","topic","name","readUVarIntString","partitions","decode","rawData","throttleTime","errorCode","readInt16","topics","parse","data","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/listPartitionReassignments/v0/response.js"],"sourcesContent":["const Decoder = require('../../../decoder')\nconst { failure, createErrorFromCode } = require('../../../error')\n\n/**\n * ListPartitionReassignments Response (Version: 0) => throttle_time_ms error_code error_message [topics] TAG_BUFFER\n *  throttle_time_ms => INT32\n *  error_code => INT16\n *  error_message => COMPACT_NULLABLE_STRING\n *  topics => name [partitions] TAG_BUFFER\n *    name => COMPACT_STRING\n *    partitions => partition_index [replicas] [adding_replicas] [removing_replicas] TAG_BUFFER\n *      partition_index => INT32\n *       replicas => INT32\n *       adding_replicas => INT32\n *       removing_replicas => INT32\n */\n\nconst decodeReplicas = decoder => {\n  return decoder.readInt32()\n}\n\nconst decodePartitions = decoder => {\n  const partition = {\n    partition: decoder.readInt32(),\n    replicas: decoder.readUVarIntArray(decodeReplicas),\n    addingReplicas: decoder.readUVarIntArray(decodeReplicas),\n    removingReplicas: decoder.readUVarIntArray(decodeReplicas),\n  }\n\n  // Read tagged fields\n  decoder.readTaggedFields()\n  return partition\n}\n\nconst decodeTopics = decoder => {\n  const topic = {\n    name: decoder.readUVarIntString(),\n    partitions: decoder.readUVarIntArray(decodePartitions),\n  }\n\n  // Read tagged fields\n  decoder.readTaggedFields()\n  return topic\n}\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n\n  // Read tagged fields\n  decoder.readTaggedFields()\n  const throttleTime = decoder.readInt32()\n  const errorCode = decoder.readInt16()\n  // Read error message\n  decoder.readUVarIntString()\n  return {\n    throttleTime,\n    errorCode,\n    topics: decoder.readUVarIntArray(decodeTopics),\n  }\n}\n\nconst parse = async data => {\n  if (failure(data.errorCode)) {\n    throw createErrorFromCode(data.errorCode)\n  }\n\n  return data\n}\n\nmodule.exports = {\n  decode,\n  parse,\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC,OAAO;EAAEC;AAAoB,CAAC,GAAGF,OAAO,CAAC,gBAAgB,CAAC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,cAAc,GAAGC,OAAO,IAAI;EAChC,OAAOA,OAAO,CAACC,SAAS,EAAE;AAC5B,CAAC;AAED,MAAMC,gBAAgB,GAAGF,OAAO,IAAI;EAClC,MAAMG,SAAS,GAAG;IAChBA,SAAS,EAAEH,OAAO,CAACC,SAAS,EAAE;IAC9BG,QAAQ,EAAEJ,OAAO,CAACK,gBAAgB,CAACN,cAAc,CAAC;IAClDO,cAAc,EAAEN,OAAO,CAACK,gBAAgB,CAACN,cAAc,CAAC;IACxDQ,gBAAgB,EAAEP,OAAO,CAACK,gBAAgB,CAACN,cAAc;EAC3D,CAAC;;EAED;EACAC,OAAO,CAACQ,gBAAgB,EAAE;EAC1B,OAAOL,SAAS;AAClB,CAAC;AAED,MAAMM,YAAY,GAAGT,OAAO,IAAI;EAC9B,MAAMU,KAAK,GAAG;IACZC,IAAI,EAAEX,OAAO,CAACY,iBAAiB,EAAE;IACjCC,UAAU,EAAEb,OAAO,CAACK,gBAAgB,CAACH,gBAAgB;EACvD,CAAC;;EAED;EACAF,OAAO,CAACQ,gBAAgB,EAAE;EAC1B,OAAOE,KAAK;AACd,CAAC;AACD,MAAMI,MAAM;EAAA,6BAAG,WAAMC,OAAO,EAAI;IAC9B,MAAMf,OAAO,GAAG,IAAIL,OAAO,CAACoB,OAAO,CAAC;;IAEpC;IACAf,OAAO,CAACQ,gBAAgB,EAAE;IAC1B,MAAMQ,YAAY,GAAGhB,OAAO,CAACC,SAAS,EAAE;IACxC,MAAMgB,SAAS,GAAGjB,OAAO,CAACkB,SAAS,EAAE;IACrC;IACAlB,OAAO,CAACY,iBAAiB,EAAE;IAC3B,OAAO;MACLI,YAAY;MACZC,SAAS;MACTE,MAAM,EAAEnB,OAAO,CAACK,gBAAgB,CAACI,YAAY;IAC/C,CAAC;EACH,CAAC;EAAA,gBAdKK,MAAM;IAAA;EAAA;AAAA,GAcX;AAED,MAAMM,KAAK;EAAA,8BAAG,WAAMC,IAAI,EAAI;IAC1B,IAAIxB,OAAO,CAACwB,IAAI,CAACJ,SAAS,CAAC,EAAE;MAC3B,MAAMnB,mBAAmB,CAACuB,IAAI,CAACJ,SAAS,CAAC;IAC3C;IAEA,OAAOI,IAAI;EACb,CAAC;EAAA,gBANKD,KAAK;IAAA;EAAA;AAAA,GAMV;AAEDE,MAAM,CAACC,OAAO,GAAG;EACfT,MAAM;EACNM;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}