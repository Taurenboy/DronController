{"ast":null,"code":"const Encoder = require('../protocol/encoder');\nconst Decoder = require('../protocol/decoder');\nconst MemberMetadata = {\n  /**\n   * @param {Object} metadata\n   * @param {number} metadata.version\n   * @param {Array<string>} metadata.topics\n   * @param {Buffer} [metadata.userData=Buffer.alloc(0)]\n   *\n   * @returns Buffer\n   */\n  encode({\n    version,\n    topics,\n    userData = Buffer.alloc(0)\n  }) {\n    return new Encoder().writeInt16(version).writeArray(topics).writeBytes(userData).buffer;\n  },\n  /**\n   * @param {Buffer} buffer\n   * @returns {Object}\n   */\n  decode(buffer) {\n    const decoder = new Decoder(buffer);\n    return {\n      version: decoder.readInt16(),\n      topics: decoder.readArray(d => d.readString()),\n      userData: decoder.readBytes()\n    };\n  }\n};\nconst MemberAssignment = {\n  /**\n   * @param {object} options\n   * @param {number} options.version\n   * @param {Object<String,Array>} options.assignment, example:\n   *                               {\n   *                                 'topic-A': [0, 2, 4, 6],\n   *                                 'topic-B': [0, 2],\n   *                               }\n   * @param {Buffer} [options.userData=Buffer.alloc(0)]\n   *\n   * @returns Buffer\n   */\n  encode({\n    version,\n    assignment,\n    userData = Buffer.alloc(0)\n  }) {\n    return new Encoder().writeInt16(version).writeArray(Object.keys(assignment).map(topic => new Encoder().writeString(topic).writeArray(assignment[topic]))).writeBytes(userData).buffer;\n  },\n  /**\n   * @param {Buffer} buffer\n   * @returns {Object|null}\n   */\n  decode(buffer) {\n    const decoder = new Decoder(buffer);\n    const decodePartitions = d => d.readInt32();\n    const decodeAssignment = d => ({\n      topic: d.readString(),\n      partitions: d.readArray(decodePartitions)\n    });\n    const indexAssignment = (obj, {\n      topic,\n      partitions\n    }) => Object.assign(obj, {\n      [topic]: partitions\n    });\n    if (!decoder.canReadInt16()) {\n      return null;\n    }\n    return {\n      version: decoder.readInt16(),\n      assignment: decoder.readArray(decodeAssignment).reduce(indexAssignment, {}),\n      userData: decoder.readBytes()\n    };\n  }\n};\nmodule.exports = {\n  MemberMetadata,\n  MemberAssignment\n};","map":{"version":3,"names":["Encoder","require","Decoder","MemberMetadata","encode","version","topics","userData","Buffer","alloc","writeInt16","writeArray","writeBytes","buffer","decode","decoder","readInt16","readArray","d","readString","readBytes","MemberAssignment","assignment","Object","keys","map","topic","writeString","decodePartitions","readInt32","decodeAssignment","partitions","indexAssignment","obj","assign","canReadInt16","reduce","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/consumer/assignerProtocol.js"],"sourcesContent":["const Encoder = require('../protocol/encoder')\nconst Decoder = require('../protocol/decoder')\n\nconst MemberMetadata = {\n  /**\n   * @param {Object} metadata\n   * @param {number} metadata.version\n   * @param {Array<string>} metadata.topics\n   * @param {Buffer} [metadata.userData=Buffer.alloc(0)]\n   *\n   * @returns Buffer\n   */\n  encode({ version, topics, userData = Buffer.alloc(0) }) {\n    return new Encoder()\n      .writeInt16(version)\n      .writeArray(topics)\n      .writeBytes(userData).buffer\n  },\n\n  /**\n   * @param {Buffer} buffer\n   * @returns {Object}\n   */\n  decode(buffer) {\n    const decoder = new Decoder(buffer)\n    return {\n      version: decoder.readInt16(),\n      topics: decoder.readArray(d => d.readString()),\n      userData: decoder.readBytes(),\n    }\n  },\n}\n\nconst MemberAssignment = {\n  /**\n   * @param {object} options\n   * @param {number} options.version\n   * @param {Object<String,Array>} options.assignment, example:\n   *                               {\n   *                                 'topic-A': [0, 2, 4, 6],\n   *                                 'topic-B': [0, 2],\n   *                               }\n   * @param {Buffer} [options.userData=Buffer.alloc(0)]\n   *\n   * @returns Buffer\n   */\n  encode({ version, assignment, userData = Buffer.alloc(0) }) {\n    return new Encoder()\n      .writeInt16(version)\n      .writeArray(\n        Object.keys(assignment).map(topic =>\n          new Encoder().writeString(topic).writeArray(assignment[topic])\n        )\n      )\n      .writeBytes(userData).buffer\n  },\n\n  /**\n   * @param {Buffer} buffer\n   * @returns {Object|null}\n   */\n  decode(buffer) {\n    const decoder = new Decoder(buffer)\n    const decodePartitions = d => d.readInt32()\n    const decodeAssignment = d => ({\n      topic: d.readString(),\n      partitions: d.readArray(decodePartitions),\n    })\n    const indexAssignment = (obj, { topic, partitions }) =>\n      Object.assign(obj, { [topic]: partitions })\n\n    if (!decoder.canReadInt16()) {\n      return null\n    }\n\n    return {\n      version: decoder.readInt16(),\n      assignment: decoder.readArray(decodeAssignment).reduce(indexAssignment, {}),\n      userData: decoder.readBytes(),\n    }\n  },\n}\n\nmodule.exports = {\n  MemberMetadata,\n  MemberAssignment,\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC9C,MAAMC,OAAO,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAE9C,MAAME,cAAc,GAAG;EACrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,MAAM,CAAC;IAAEC,OAAO;IAAEC,MAAM;IAAEC,QAAQ,GAAGC,MAAM,CAACC,KAAK,CAAC,CAAC;EAAE,CAAC,EAAE;IACtD,OAAO,IAAIT,OAAO,EAAE,CACjBU,UAAU,CAACL,OAAO,CAAC,CACnBM,UAAU,CAACL,MAAM,CAAC,CAClBM,UAAU,CAACL,QAAQ,CAAC,CAACM,MAAM;EAChC,CAAC;EAED;AACF;AACA;AACA;EACEC,MAAM,CAACD,MAAM,EAAE;IACb,MAAME,OAAO,GAAG,IAAIb,OAAO,CAACW,MAAM,CAAC;IACnC,OAAO;MACLR,OAAO,EAAEU,OAAO,CAACC,SAAS,EAAE;MAC5BV,MAAM,EAAES,OAAO,CAACE,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,EAAE,CAAC;MAC9CZ,QAAQ,EAAEQ,OAAO,CAACK,SAAS;IAC7B,CAAC;EACH;AACF,CAAC;AAED,MAAMC,gBAAgB,GAAG;EACvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEjB,MAAM,CAAC;IAAEC,OAAO;IAAEiB,UAAU;IAAEf,QAAQ,GAAGC,MAAM,CAACC,KAAK,CAAC,CAAC;EAAE,CAAC,EAAE;IAC1D,OAAO,IAAIT,OAAO,EAAE,CACjBU,UAAU,CAACL,OAAO,CAAC,CACnBM,UAAU,CACTY,MAAM,CAACC,IAAI,CAACF,UAAU,CAAC,CAACG,GAAG,CAACC,KAAK,IAC/B,IAAI1B,OAAO,EAAE,CAAC2B,WAAW,CAACD,KAAK,CAAC,CAACf,UAAU,CAACW,UAAU,CAACI,KAAK,CAAC,CAAC,CAC/D,CACF,CACAd,UAAU,CAACL,QAAQ,CAAC,CAACM,MAAM;EAChC,CAAC;EAED;AACF;AACA;AACA;EACEC,MAAM,CAACD,MAAM,EAAE;IACb,MAAME,OAAO,GAAG,IAAIb,OAAO,CAACW,MAAM,CAAC;IACnC,MAAMe,gBAAgB,GAAGV,CAAC,IAAIA,CAAC,CAACW,SAAS,EAAE;IAC3C,MAAMC,gBAAgB,GAAGZ,CAAC,KAAK;MAC7BQ,KAAK,EAAER,CAAC,CAACC,UAAU,EAAE;MACrBY,UAAU,EAAEb,CAAC,CAACD,SAAS,CAACW,gBAAgB;IAC1C,CAAC,CAAC;IACF,MAAMI,eAAe,GAAG,CAACC,GAAG,EAAE;MAAEP,KAAK;MAAEK;IAAW,CAAC,KACjDR,MAAM,CAACW,MAAM,CAACD,GAAG,EAAE;MAAE,CAACP,KAAK,GAAGK;IAAW,CAAC,CAAC;IAE7C,IAAI,CAAChB,OAAO,CAACoB,YAAY,EAAE,EAAE;MAC3B,OAAO,IAAI;IACb;IAEA,OAAO;MACL9B,OAAO,EAAEU,OAAO,CAACC,SAAS,EAAE;MAC5BM,UAAU,EAAEP,OAAO,CAACE,SAAS,CAACa,gBAAgB,CAAC,CAACM,MAAM,CAACJ,eAAe,EAAE,CAAC,CAAC,CAAC;MAC3EzB,QAAQ,EAAEQ,OAAO,CAACK,SAAS;IAC7B,CAAC;EACH;AACF,CAAC;AAEDiB,MAAM,CAACC,OAAO,GAAG;EACfnC,cAAc;EACdkB;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}