{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Decoder = require('../../../decoder');\nconst {\n  failure,\n  createErrorFromCode,\n  failIfVersionNotSupported\n} = require('../../../error');\n\n/**\n * ApiVersionResponse => ApiVersions\n *   ErrorCode = INT16\n *   ApiVersions = [ApiVersion]\n *     ApiVersion = ApiKey MinVersion MaxVersion\n *       ApiKey = INT16\n *       MinVersion = INT16\n *       MaxVersion = INT16\n */\n\nconst apiVersion = decoder => ({\n  apiKey: decoder.readInt16(),\n  minVersion: decoder.readInt16(),\n  maxVersion: decoder.readInt16()\n});\nconst decode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (rawData) {\n    const decoder = new Decoder(rawData);\n    const errorCode = decoder.readInt16();\n    failIfVersionNotSupported(errorCode);\n    return {\n      errorCode,\n      apiVersions: decoder.readArray(apiVersion)\n    };\n  });\n  return function decode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst parse = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (data) {\n    if (failure(data.errorCode)) {\n      throw createErrorFromCode(data.errorCode);\n    }\n    return data;\n  });\n  return function parse(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  decode,\n  parse\n};","map":{"version":3,"names":["Decoder","require","failure","createErrorFromCode","failIfVersionNotSupported","apiVersion","decoder","apiKey","readInt16","minVersion","maxVersion","decode","rawData","errorCode","apiVersions","readArray","parse","data","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/apiVersions/v0/response.js"],"sourcesContent":["const Decoder = require('../../../decoder')\nconst { failure, createErrorFromCode, failIfVersionNotSupported } = require('../../../error')\n\n/**\n * ApiVersionResponse => ApiVersions\n *   ErrorCode = INT16\n *   ApiVersions = [ApiVersion]\n *     ApiVersion = ApiKey MinVersion MaxVersion\n *       ApiKey = INT16\n *       MinVersion = INT16\n *       MaxVersion = INT16\n */\n\nconst apiVersion = decoder => ({\n  apiKey: decoder.readInt16(),\n  minVersion: decoder.readInt16(),\n  maxVersion: decoder.readInt16(),\n})\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n  const errorCode = decoder.readInt16()\n\n  failIfVersionNotSupported(errorCode)\n\n  return {\n    errorCode,\n    apiVersions: decoder.readArray(apiVersion),\n  }\n}\n\nconst parse = async data => {\n  if (failure(data.errorCode)) {\n    throw createErrorFromCode(data.errorCode)\n  }\n\n  return data\n}\n\nmodule.exports = {\n  decode,\n  parse,\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC,OAAO;EAAEC,mBAAmB;EAAEC;AAA0B,CAAC,GAAGH,OAAO,CAAC,gBAAgB,CAAC;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,UAAU,GAAGC,OAAO,KAAK;EAC7BC,MAAM,EAAED,OAAO,CAACE,SAAS,EAAE;EAC3BC,UAAU,EAAEH,OAAO,CAACE,SAAS,EAAE;EAC/BE,UAAU,EAAEJ,OAAO,CAACE,SAAS;AAC/B,CAAC,CAAC;AAEF,MAAMG,MAAM;EAAA,6BAAG,WAAMC,OAAO,EAAI;IAC9B,MAAMN,OAAO,GAAG,IAAIN,OAAO,CAACY,OAAO,CAAC;IACpC,MAAMC,SAAS,GAAGP,OAAO,CAACE,SAAS,EAAE;IAErCJ,yBAAyB,CAACS,SAAS,CAAC;IAEpC,OAAO;MACLA,SAAS;MACTC,WAAW,EAAER,OAAO,CAACS,SAAS,CAACV,UAAU;IAC3C,CAAC;EACH,CAAC;EAAA,gBAVKM,MAAM;IAAA;EAAA;AAAA,GAUX;AAED,MAAMK,KAAK;EAAA,8BAAG,WAAMC,IAAI,EAAI;IAC1B,IAAIf,OAAO,CAACe,IAAI,CAACJ,SAAS,CAAC,EAAE;MAC3B,MAAMV,mBAAmB,CAACc,IAAI,CAACJ,SAAS,CAAC;IAC3C;IAEA,OAAOI,IAAI;EACb,CAAC;EAAA,gBANKD,KAAK;IAAA;EAAA;AAAA,GAMV;AAEDE,MAAM,CAACC,OAAO,GAAG;EACfR,MAAM;EACNK;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}