{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Encoder = require('../../../encoder');\nconst {\n  SyncGroup: apiKey\n} = require('../../apiKeys');\n\n/**\n * Version 3 adds group_instance_id to indicate member identity across restarts.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-345%3A+Introduce+static+membership+protocol+to+reduce+consumer+rebalances\n *\n * SyncGroup Request (Version: 3) => group_id generation_id member_id group_instance_id [group_assignment]\n *   group_id => STRING\n *   generation_id => INT32\n *   member_id => STRING\n *   group_instance_id => NULLABLE_STRING\n *   group_assignment => member_id member_assignment\n *     member_id => STRING\n *     member_assignment => BYTES\n */\n\nmodule.exports = ({\n  groupId,\n  generationId,\n  memberId,\n  groupInstanceId = null,\n  groupAssignment\n}) => ({\n  apiKey,\n  apiVersion: 3,\n  apiName: 'SyncGroup',\n  encode: function () {\n    var _ref = _asyncToGenerator(function* () {\n      return new Encoder().writeString(groupId).writeInt32(generationId).writeString(memberId).writeString(groupInstanceId).writeArray(groupAssignment.map(encodeGroupAssignment));\n    });\n    return function encode() {\n      return _ref.apply(this, arguments);\n    };\n  }()\n});\nconst encodeGroupAssignment = ({\n  memberId,\n  memberAssignment\n}) => {\n  return new Encoder().writeString(memberId).writeBytes(memberAssignment);\n};","map":{"version":3,"names":["Encoder","require","SyncGroup","apiKey","module","exports","groupId","generationId","memberId","groupInstanceId","groupAssignment","apiVersion","apiName","encode","writeString","writeInt32","writeArray","map","encodeGroupAssignment","memberAssignment","writeBytes"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/syncGroup/v3/request.js"],"sourcesContent":["const Encoder = require('../../../encoder')\nconst { SyncGroup: apiKey } = require('../../apiKeys')\n\n/**\n * Version 3 adds group_instance_id to indicate member identity across restarts.\n * @see https://cwiki.apache.org/confluence/display/KAFKA/KIP-345%3A+Introduce+static+membership+protocol+to+reduce+consumer+rebalances\n *\n * SyncGroup Request (Version: 3) => group_id generation_id member_id group_instance_id [group_assignment]\n *   group_id => STRING\n *   generation_id => INT32\n *   member_id => STRING\n *   group_instance_id => NULLABLE_STRING\n *   group_assignment => member_id member_assignment\n *     member_id => STRING\n *     member_assignment => BYTES\n */\n\nmodule.exports = ({\n  groupId,\n  generationId,\n  memberId,\n  groupInstanceId = null,\n  groupAssignment,\n}) => ({\n  apiKey,\n  apiVersion: 3,\n  apiName: 'SyncGroup',\n  encode: async () => {\n    return new Encoder()\n      .writeString(groupId)\n      .writeInt32(generationId)\n      .writeString(memberId)\n      .writeString(groupInstanceId)\n      .writeArray(groupAssignment.map(encodeGroupAssignment))\n  },\n})\n\nconst encodeGroupAssignment = ({ memberId, memberAssignment }) => {\n  return new Encoder().writeString(memberId).writeBytes(memberAssignment)\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC,SAAS,EAAEC;AAAO,CAAC,GAAGF,OAAO,CAAC,eAAe,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAG,CAAC;EAChBC,OAAO;EACPC,YAAY;EACZC,QAAQ;EACRC,eAAe,GAAG,IAAI;EACtBC;AACF,CAAC,MAAM;EACLP,MAAM;EACNQ,UAAU,EAAE,CAAC;EACbC,OAAO,EAAE,WAAW;EACpBC,MAAM;IAAA,6BAAE,aAAY;MAClB,OAAO,IAAIb,OAAO,EAAE,CACjBc,WAAW,CAACR,OAAO,CAAC,CACpBS,UAAU,CAACR,YAAY,CAAC,CACxBO,WAAW,CAACN,QAAQ,CAAC,CACrBM,WAAW,CAACL,eAAe,CAAC,CAC5BO,UAAU,CAACN,eAAe,CAACO,GAAG,CAACC,qBAAqB,CAAC,CAAC;IAC3D,CAAC;IAAA;MAAA;IAAA;EAAA;AACH,CAAC,CAAC;AAEF,MAAMA,qBAAqB,GAAG,CAAC;EAAEV,QAAQ;EAAEW;AAAiB,CAAC,KAAK;EAChE,OAAO,IAAInB,OAAO,EAAE,CAACc,WAAW,CAACN,QAAQ,CAAC,CAACY,UAAU,CAACD,gBAAgB,CAAC;AACzE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}