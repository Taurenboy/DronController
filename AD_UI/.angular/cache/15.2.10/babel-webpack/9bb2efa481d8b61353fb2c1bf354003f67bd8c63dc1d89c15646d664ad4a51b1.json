{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Decoder = require('../../../decoder');\nconst {\n  failure,\n  createErrorFromCode\n} = require('../../../error');\n\n/**\n * CreateAcls Response (Version: 0) => throttle_time_ms [creation_responses]\n *   throttle_time_ms => INT32\n *   creation_responses => error_code error_message\n *     error_code => INT16\n *     error_message => NULLABLE_STRING\n */\n\nconst decodeCreationResponse = decoder => ({\n  errorCode: decoder.readInt16(),\n  errorMessage: decoder.readString()\n});\nconst decode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (rawData) {\n    const decoder = new Decoder(rawData);\n    const throttleTime = decoder.readInt32();\n    const creationResponses = decoder.readArray(decodeCreationResponse);\n    return {\n      throttleTime,\n      creationResponses\n    };\n  });\n  return function decode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst parse = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (data) {\n    const creationResponsesWithError = data.creationResponses.filter(({\n      errorCode\n    }) => failure(errorCode));\n    if (creationResponsesWithError.length > 0) {\n      throw createErrorFromCode(creationResponsesWithError[0].errorCode);\n    }\n    return data;\n  });\n  return function parse(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  decode,\n  parse\n};","map":{"version":3,"names":["Decoder","require","failure","createErrorFromCode","decodeCreationResponse","decoder","errorCode","readInt16","errorMessage","readString","decode","rawData","throttleTime","readInt32","creationResponses","readArray","parse","data","creationResponsesWithError","filter","length","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/createAcls/v0/response.js"],"sourcesContent":["const Decoder = require('../../../decoder')\nconst { failure, createErrorFromCode } = require('../../../error')\n\n/**\n * CreateAcls Response (Version: 0) => throttle_time_ms [creation_responses]\n *   throttle_time_ms => INT32\n *   creation_responses => error_code error_message\n *     error_code => INT16\n *     error_message => NULLABLE_STRING\n */\n\nconst decodeCreationResponse = decoder => ({\n  errorCode: decoder.readInt16(),\n  errorMessage: decoder.readString(),\n})\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n  const throttleTime = decoder.readInt32()\n  const creationResponses = decoder.readArray(decodeCreationResponse)\n\n  return {\n    throttleTime,\n    creationResponses,\n  }\n}\n\nconst parse = async data => {\n  const creationResponsesWithError = data.creationResponses.filter(({ errorCode }) =>\n    failure(errorCode)\n  )\n\n  if (creationResponsesWithError.length > 0) {\n    throw createErrorFromCode(creationResponsesWithError[0].errorCode)\n  }\n\n  return data\n}\n\nmodule.exports = {\n  decode,\n  parse,\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC,OAAO;EAAEC;AAAoB,CAAC,GAAGF,OAAO,CAAC,gBAAgB,CAAC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,sBAAsB,GAAGC,OAAO,KAAK;EACzCC,SAAS,EAAED,OAAO,CAACE,SAAS,EAAE;EAC9BC,YAAY,EAAEH,OAAO,CAACI,UAAU;AAClC,CAAC,CAAC;AAEF,MAAMC,MAAM;EAAA,6BAAG,WAAMC,OAAO,EAAI;IAC9B,MAAMN,OAAO,GAAG,IAAIL,OAAO,CAACW,OAAO,CAAC;IACpC,MAAMC,YAAY,GAAGP,OAAO,CAACQ,SAAS,EAAE;IACxC,MAAMC,iBAAiB,GAAGT,OAAO,CAACU,SAAS,CAACX,sBAAsB,CAAC;IAEnE,OAAO;MACLQ,YAAY;MACZE;IACF,CAAC;EACH,CAAC;EAAA,gBATKJ,MAAM;IAAA;EAAA;AAAA,GASX;AAED,MAAMM,KAAK;EAAA,8BAAG,WAAMC,IAAI,EAAI;IAC1B,MAAMC,0BAA0B,GAAGD,IAAI,CAACH,iBAAiB,CAACK,MAAM,CAAC,CAAC;MAAEb;IAAU,CAAC,KAC7EJ,OAAO,CAACI,SAAS,CAAC,CACnB;IAED,IAAIY,0BAA0B,CAACE,MAAM,GAAG,CAAC,EAAE;MACzC,MAAMjB,mBAAmB,CAACe,0BAA0B,CAAC,CAAC,CAAC,CAACZ,SAAS,CAAC;IACpE;IAEA,OAAOW,IAAI;EACb,CAAC;EAAA,gBAVKD,KAAK;IAAA;EAAA;AAAA,GAUV;AAEDK,MAAM,CAACC,OAAO,GAAG;EACfZ,MAAM;EACNM;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}