{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Decoder = require('../../../decoder');\nconst {\n  failure,\n  createErrorFromCode\n} = require('../../../error');\n\n/**\n * v0\n * ProduceResponse => [TopicName [Partition ErrorCode Offset]]\n *   TopicName => string\n *   Partition => int32\n *   ErrorCode => int16\n *   Offset => int64\n */\n\nconst partition = decoder => ({\n  partition: decoder.readInt32(),\n  errorCode: decoder.readInt16(),\n  offset: decoder.readInt64().toString()\n});\nconst decode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (rawData) {\n    const decoder = new Decoder(rawData);\n    const topics = decoder.readArray(decoder => ({\n      topicName: decoder.readString(),\n      partitions: decoder.readArray(partition)\n    }));\n    return {\n      topics\n    };\n  });\n  return function decode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst parse = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (data) {\n    const errors = data.topics.flatMap(topic => {\n      return topic.partitions.filter(partition => failure(partition.errorCode));\n    });\n    if (errors.length > 0) {\n      const {\n        errorCode\n      } = errors[0];\n      throw createErrorFromCode(errorCode);\n    }\n    return data;\n  });\n  return function parse(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  decode,\n  parse\n};","map":{"version":3,"names":["Decoder","require","failure","createErrorFromCode","partition","decoder","readInt32","errorCode","readInt16","offset","readInt64","toString","decode","rawData","topics","readArray","topicName","readString","partitions","parse","data","errors","flatMap","topic","filter","length","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/produce/v0/response.js"],"sourcesContent":["const Decoder = require('../../../decoder')\nconst { failure, createErrorFromCode } = require('../../../error')\n\n/**\n * v0\n * ProduceResponse => [TopicName [Partition ErrorCode Offset]]\n *   TopicName => string\n *   Partition => int32\n *   ErrorCode => int16\n *   Offset => int64\n */\n\nconst partition = decoder => ({\n  partition: decoder.readInt32(),\n  errorCode: decoder.readInt16(),\n  offset: decoder.readInt64().toString(),\n})\n\nconst decode = async rawData => {\n  const decoder = new Decoder(rawData)\n  const topics = decoder.readArray(decoder => ({\n    topicName: decoder.readString(),\n    partitions: decoder.readArray(partition),\n  }))\n\n  return {\n    topics,\n  }\n}\n\nconst parse = async data => {\n  const errors = data.topics.flatMap(topic => {\n    return topic.partitions.filter(partition => failure(partition.errorCode))\n  })\n\n  if (errors.length > 0) {\n    const { errorCode } = errors[0]\n    throw createErrorFromCode(errorCode)\n  }\n\n  return data\n}\n\nmodule.exports = {\n  decode,\n  parse,\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC,OAAO;EAAEC;AAAoB,CAAC,GAAGF,OAAO,CAAC,gBAAgB,CAAC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,SAAS,GAAGC,OAAO,KAAK;EAC5BD,SAAS,EAAEC,OAAO,CAACC,SAAS,EAAE;EAC9BC,SAAS,EAAEF,OAAO,CAACG,SAAS,EAAE;EAC9BC,MAAM,EAAEJ,OAAO,CAACK,SAAS,EAAE,CAACC,QAAQ;AACtC,CAAC,CAAC;AAEF,MAAMC,MAAM;EAAA,6BAAG,WAAMC,OAAO,EAAI;IAC9B,MAAMR,OAAO,GAAG,IAAIL,OAAO,CAACa,OAAO,CAAC;IACpC,MAAMC,MAAM,GAAGT,OAAO,CAACU,SAAS,CAACV,OAAO,KAAK;MAC3CW,SAAS,EAAEX,OAAO,CAACY,UAAU,EAAE;MAC/BC,UAAU,EAAEb,OAAO,CAACU,SAAS,CAACX,SAAS;IACzC,CAAC,CAAC,CAAC;IAEH,OAAO;MACLU;IACF,CAAC;EACH,CAAC;EAAA,gBAVKF,MAAM;IAAA;EAAA;AAAA,GAUX;AAED,MAAMO,KAAK;EAAA,8BAAG,WAAMC,IAAI,EAAI;IAC1B,MAAMC,MAAM,GAAGD,IAAI,CAACN,MAAM,CAACQ,OAAO,CAACC,KAAK,IAAI;MAC1C,OAAOA,KAAK,CAACL,UAAU,CAACM,MAAM,CAACpB,SAAS,IAAIF,OAAO,CAACE,SAAS,CAACG,SAAS,CAAC,CAAC;IAC3E,CAAC,CAAC;IAEF,IAAIc,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE;MACrB,MAAM;QAAElB;MAAU,CAAC,GAAGc,MAAM,CAAC,CAAC,CAAC;MAC/B,MAAMlB,mBAAmB,CAACI,SAAS,CAAC;IACtC;IAEA,OAAOa,IAAI;EACb,CAAC;EAAA,gBAXKD,KAAK;IAAA;EAAA;AAAA,GAWV;AAEDO,MAAM,CAACC,OAAO,GAAG;EACff,MAAM;EACNO;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}