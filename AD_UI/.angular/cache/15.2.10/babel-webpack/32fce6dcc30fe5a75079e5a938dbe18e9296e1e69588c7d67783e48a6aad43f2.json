{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst {\n  request,\n  response\n} = require('../../protocol/sasl/awsIam');\nconst {\n  KafkaJSSASLAuthenticationError\n} = require('../../errors');\nconst awsIAMAuthenticatorProvider = sasl => ({\n  host,\n  port,\n  logger,\n  saslAuthenticate\n}) => {\n  return {\n    authenticate: function () {\n      var _ref = _asyncToGenerator(function* () {\n        if (!sasl.authorizationIdentity) {\n          throw new KafkaJSSASLAuthenticationError('SASL AWS-IAM: Missing authorizationIdentity');\n        }\n        if (!sasl.accessKeyId) {\n          throw new KafkaJSSASLAuthenticationError('SASL AWS-IAM: Missing accessKeyId');\n        }\n        if (!sasl.secretAccessKey) {\n          throw new KafkaJSSASLAuthenticationError('SASL AWS-IAM: Missing secretAccessKey');\n        }\n        if (!sasl.sessionToken) {\n          sasl.sessionToken = '';\n        }\n        const broker = `${host}:${port}`;\n        try {\n          logger.debug('Authenticate with SASL AWS-IAM', {\n            broker\n          });\n          yield saslAuthenticate({\n            request: request(sasl),\n            response\n          });\n          logger.debug('SASL AWS-IAM authentication successful', {\n            broker\n          });\n        } catch (e) {\n          const error = new KafkaJSSASLAuthenticationError(`SASL AWS-IAM authentication failed: ${e.message}`);\n          logger.error(error.message, {\n            broker\n          });\n          throw error;\n        }\n      });\n      return function authenticate() {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  };\n};\nmodule.exports = awsIAMAuthenticatorProvider;","map":{"version":3,"names":["request","response","require","KafkaJSSASLAuthenticationError","awsIAMAuthenticatorProvider","sasl","host","port","logger","saslAuthenticate","authenticate","authorizationIdentity","accessKeyId","secretAccessKey","sessionToken","broker","debug","e","error","message","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/broker/saslAuthenticator/awsIam.js"],"sourcesContent":["const { request, response } = require('../../protocol/sasl/awsIam')\nconst { KafkaJSSASLAuthenticationError } = require('../../errors')\n\nconst awsIAMAuthenticatorProvider = sasl => ({ host, port, logger, saslAuthenticate }) => {\n  return {\n    authenticate: async () => {\n      if (!sasl.authorizationIdentity) {\n        throw new KafkaJSSASLAuthenticationError('SASL AWS-IAM: Missing authorizationIdentity')\n      }\n      if (!sasl.accessKeyId) {\n        throw new KafkaJSSASLAuthenticationError('SASL AWS-IAM: Missing accessKeyId')\n      }\n      if (!sasl.secretAccessKey) {\n        throw new KafkaJSSASLAuthenticationError('SASL AWS-IAM: Missing secretAccessKey')\n      }\n      if (!sasl.sessionToken) {\n        sasl.sessionToken = ''\n      }\n\n      const broker = `${host}:${port}`\n\n      try {\n        logger.debug('Authenticate with SASL AWS-IAM', { broker })\n        await saslAuthenticate({ request: request(sasl), response })\n        logger.debug('SASL AWS-IAM authentication successful', { broker })\n      } catch (e) {\n        const error = new KafkaJSSASLAuthenticationError(\n          `SASL AWS-IAM authentication failed: ${e.message}`\n        )\n        logger.error(error.message, { broker })\n        throw error\n      }\n    },\n  }\n}\n\nmodule.exports = awsIAMAuthenticatorProvider\n"],"mappings":";AAAA,MAAM;EAAEA,OAAO;EAAEC;AAAS,CAAC,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACnE,MAAM;EAAEC;AAA+B,CAAC,GAAGD,OAAO,CAAC,cAAc,CAAC;AAElE,MAAME,2BAA2B,GAAGC,IAAI,IAAI,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC,MAAM;EAAEC;AAAiB,CAAC,KAAK;EACxF,OAAO;IACLC,YAAY;MAAA,6BAAE,aAAY;QACxB,IAAI,CAACL,IAAI,CAACM,qBAAqB,EAAE;UAC/B,MAAM,IAAIR,8BAA8B,CAAC,6CAA6C,CAAC;QACzF;QACA,IAAI,CAACE,IAAI,CAACO,WAAW,EAAE;UACrB,MAAM,IAAIT,8BAA8B,CAAC,mCAAmC,CAAC;QAC/E;QACA,IAAI,CAACE,IAAI,CAACQ,eAAe,EAAE;UACzB,MAAM,IAAIV,8BAA8B,CAAC,uCAAuC,CAAC;QACnF;QACA,IAAI,CAACE,IAAI,CAACS,YAAY,EAAE;UACtBT,IAAI,CAACS,YAAY,GAAG,EAAE;QACxB;QAEA,MAAMC,MAAM,GAAI,GAAET,IAAK,IAAGC,IAAK,EAAC;QAEhC,IAAI;UACFC,MAAM,CAACQ,KAAK,CAAC,gCAAgC,EAAE;YAAED;UAAO,CAAC,CAAC;UAC1D,MAAMN,gBAAgB,CAAC;YAAET,OAAO,EAAEA,OAAO,CAACK,IAAI,CAAC;YAAEJ;UAAS,CAAC,CAAC;UAC5DO,MAAM,CAACQ,KAAK,CAAC,wCAAwC,EAAE;YAAED;UAAO,CAAC,CAAC;QACpE,CAAC,CAAC,OAAOE,CAAC,EAAE;UACV,MAAMC,KAAK,GAAG,IAAIf,8BAA8B,CAC7C,uCAAsCc,CAAC,CAACE,OAAQ,EAAC,CACnD;UACDX,MAAM,CAACU,KAAK,CAACA,KAAK,CAACC,OAAO,EAAE;YAAEJ;UAAO,CAAC,CAAC;UACvC,MAAMG,KAAK;QACb;MACF,CAAC;MAAA;QAAA;MAAA;IAAA;EACH,CAAC;AACH,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGjB,2BAA2B"},"metadata":{},"sourceType":"script","externalDependencies":[]}