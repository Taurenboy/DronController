{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst {\n  decode\n} = require('../v3/response');\nconst {\n  KafkaJSMemberIdRequired\n} = require('../../../../errors');\nconst {\n  failure,\n  createErrorFromCode,\n  errorCodes\n} = require('../../../error');\n\n/**\n * JoinGroup Response (Version: 4) => throttle_time_ms error_code generation_id group_protocol leader_id member_id [members]\n *   throttle_time_ms => INT32\n *   error_code => INT16\n *   generation_id => INT32\n *   group_protocol => STRING\n *   leader_id => STRING\n *   member_id => STRING\n *   members => member_id member_metadata\n *     member_id => STRING\n *     member_metadata => BYTES\n */\n\nconst {\n  code: MEMBER_ID_REQUIRED_ERROR_CODE\n} = errorCodes.find(e => e.type === 'MEMBER_ID_REQUIRED');\nconst parse = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (data) {\n    if (failure(data.errorCode)) {\n      if (data.errorCode === MEMBER_ID_REQUIRED_ERROR_CODE) {\n        throw new KafkaJSMemberIdRequired(createErrorFromCode(data.errorCode), {\n          memberId: data.memberId\n        });\n      }\n      throw createErrorFromCode(data.errorCode);\n    }\n    return data;\n  });\n  return function parse(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  decode,\n  parse\n};","map":{"version":3,"names":["decode","require","KafkaJSMemberIdRequired","failure","createErrorFromCode","errorCodes","code","MEMBER_ID_REQUIRED_ERROR_CODE","find","e","type","parse","data","errorCode","memberId","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/joinGroup/v4/response.js"],"sourcesContent":["const { decode } = require('../v3/response')\nconst { KafkaJSMemberIdRequired } = require('../../../../errors')\nconst { failure, createErrorFromCode, errorCodes } = require('../../../error')\n\n/**\n * JoinGroup Response (Version: 4) => throttle_time_ms error_code generation_id group_protocol leader_id member_id [members]\n *   throttle_time_ms => INT32\n *   error_code => INT16\n *   generation_id => INT32\n *   group_protocol => STRING\n *   leader_id => STRING\n *   member_id => STRING\n *   members => member_id member_metadata\n *     member_id => STRING\n *     member_metadata => BYTES\n */\n\nconst { code: MEMBER_ID_REQUIRED_ERROR_CODE } = errorCodes.find(\n  e => e.type === 'MEMBER_ID_REQUIRED'\n)\n\nconst parse = async data => {\n  if (failure(data.errorCode)) {\n    if (data.errorCode === MEMBER_ID_REQUIRED_ERROR_CODE) {\n      throw new KafkaJSMemberIdRequired(createErrorFromCode(data.errorCode), {\n        memberId: data.memberId,\n      })\n    }\n\n    throw createErrorFromCode(data.errorCode)\n  }\n\n  return data\n}\n\nmodule.exports = {\n  decode,\n  parse,\n}\n"],"mappings":";AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC5C,MAAM;EAAEC;AAAwB,CAAC,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AACjE,MAAM;EAAEE,OAAO;EAAEC,mBAAmB;EAAEC;AAAW,CAAC,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEK,IAAI,EAAEC;AAA8B,CAAC,GAAGF,UAAU,CAACG,IAAI,CAC7DC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,oBAAoB,CACrC;AAED,MAAMC,KAAK;EAAA,6BAAG,WAAMC,IAAI,EAAI;IAC1B,IAAIT,OAAO,CAACS,IAAI,CAACC,SAAS,CAAC,EAAE;MAC3B,IAAID,IAAI,CAACC,SAAS,KAAKN,6BAA6B,EAAE;QACpD,MAAM,IAAIL,uBAAuB,CAACE,mBAAmB,CAACQ,IAAI,CAACC,SAAS,CAAC,EAAE;UACrEC,QAAQ,EAAEF,IAAI,CAACE;QACjB,CAAC,CAAC;MACJ;MAEA,MAAMV,mBAAmB,CAACQ,IAAI,CAACC,SAAS,CAAC;IAC3C;IAEA,OAAOD,IAAI;EACb,CAAC;EAAA,gBAZKD,KAAK;IAAA;EAAA;AAAA,GAYV;AAEDI,MAAM,CAACC,OAAO,GAAG;EACfhB,MAAM;EACNW;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}