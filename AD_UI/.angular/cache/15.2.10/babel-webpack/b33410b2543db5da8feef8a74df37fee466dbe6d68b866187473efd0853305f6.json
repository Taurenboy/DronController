{"ast":null,"code":"const {\n  assign\n} = Object;\nconst LEVELS = {\n  NOTHING: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 4,\n  DEBUG: 5\n};\nconst createLevel = (label, level, currentLevel, namespace, logFunction) => (message, extra = {}) => {\n  if (level > currentLevel()) return;\n  logFunction({\n    namespace,\n    level,\n    label,\n    log: assign({\n      timestamp: new Date().toISOString(),\n      logger: 'kafkajs',\n      message\n    }, extra)\n  });\n};\nconst evaluateLogLevel = logLevel => {\n  const envLogLevel = (process.env.KAFKAJS_LOG_LEVEL || '').toUpperCase();\n  return LEVELS[envLogLevel] == null ? logLevel : LEVELS[envLogLevel];\n};\nconst createLogger = ({\n  level = LEVELS.INFO,\n  logCreator\n} = {}) => {\n  let logLevel = evaluateLogLevel(level);\n  const logFunction = logCreator(logLevel);\n  const createNamespace = (namespace, logLevel = null) => {\n    const namespaceLogLevel = evaluateLogLevel(logLevel);\n    return createLogFunctions(namespace, namespaceLogLevel);\n  };\n  const createLogFunctions = (namespace, namespaceLogLevel = null) => {\n    const currentLogLevel = () => namespaceLogLevel == null ? logLevel : namespaceLogLevel;\n    const logger = {\n      info: createLevel('INFO', LEVELS.INFO, currentLogLevel, namespace, logFunction),\n      error: createLevel('ERROR', LEVELS.ERROR, currentLogLevel, namespace, logFunction),\n      warn: createLevel('WARN', LEVELS.WARN, currentLogLevel, namespace, logFunction),\n      debug: createLevel('DEBUG', LEVELS.DEBUG, currentLogLevel, namespace, logFunction)\n    };\n    return assign(logger, {\n      namespace: createNamespace,\n      setLogLevel: newLevel => {\n        logLevel = newLevel;\n      }\n    });\n  };\n  return createLogFunctions();\n};\nmodule.exports = {\n  LEVELS,\n  createLogger\n};","map":{"version":3,"names":["assign","Object","LEVELS","NOTHING","ERROR","WARN","INFO","DEBUG","createLevel","label","level","currentLevel","namespace","logFunction","message","extra","log","timestamp","Date","toISOString","logger","evaluateLogLevel","logLevel","envLogLevel","process","env","KAFKAJS_LOG_LEVEL","toUpperCase","createLogger","logCreator","createNamespace","namespaceLogLevel","createLogFunctions","currentLogLevel","info","error","warn","debug","setLogLevel","newLevel","module","exports"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/loggers/index.js"],"sourcesContent":["const { assign } = Object\n\nconst LEVELS = {\n  NOTHING: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 4,\n  DEBUG: 5,\n}\n\nconst createLevel = (label, level, currentLevel, namespace, logFunction) => (\n  message,\n  extra = {}\n) => {\n  if (level > currentLevel()) return\n  logFunction({\n    namespace,\n    level,\n    label,\n    log: assign(\n      {\n        timestamp: new Date().toISOString(),\n        logger: 'kafkajs',\n        message,\n      },\n      extra\n    ),\n  })\n}\n\nconst evaluateLogLevel = logLevel => {\n  const envLogLevel = (process.env.KAFKAJS_LOG_LEVEL || '').toUpperCase()\n  return LEVELS[envLogLevel] == null ? logLevel : LEVELS[envLogLevel]\n}\n\nconst createLogger = ({ level = LEVELS.INFO, logCreator } = {}) => {\n  let logLevel = evaluateLogLevel(level)\n  const logFunction = logCreator(logLevel)\n\n  const createNamespace = (namespace, logLevel = null) => {\n    const namespaceLogLevel = evaluateLogLevel(logLevel)\n    return createLogFunctions(namespace, namespaceLogLevel)\n  }\n\n  const createLogFunctions = (namespace, namespaceLogLevel = null) => {\n    const currentLogLevel = () => (namespaceLogLevel == null ? logLevel : namespaceLogLevel)\n    const logger = {\n      info: createLevel('INFO', LEVELS.INFO, currentLogLevel, namespace, logFunction),\n      error: createLevel('ERROR', LEVELS.ERROR, currentLogLevel, namespace, logFunction),\n      warn: createLevel('WARN', LEVELS.WARN, currentLogLevel, namespace, logFunction),\n      debug: createLevel('DEBUG', LEVELS.DEBUG, currentLogLevel, namespace, logFunction),\n    }\n\n    return assign(logger, {\n      namespace: createNamespace,\n      setLogLevel: newLevel => {\n        logLevel = newLevel\n      },\n    })\n  }\n\n  return createLogFunctions()\n}\n\nmodule.exports = {\n  LEVELS,\n  createLogger,\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,MAAM;AAEzB,MAAMC,MAAM,GAAG;EACbC,OAAO,EAAE,CAAC;EACVC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,KAAK,EAAEC,YAAY,EAAEC,SAAS,EAAEC,WAAW,KAAK,CAC1EC,OAAO,EACPC,KAAK,GAAG,CAAC,CAAC,KACP;EACH,IAAIL,KAAK,GAAGC,YAAY,EAAE,EAAE;EAC5BE,WAAW,CAAC;IACVD,SAAS;IACTF,KAAK;IACLD,KAAK;IACLO,GAAG,EAAEhB,MAAM,CACT;MACEiB,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MACnCC,MAAM,EAAE,SAAS;MACjBN;IACF,CAAC,EACDC,KAAK;EAET,CAAC,CAAC;AACJ,CAAC;AAED,MAAMM,gBAAgB,GAAGC,QAAQ,IAAI;EACnC,MAAMC,WAAW,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,EAAE,EAAEC,WAAW,EAAE;EACvE,OAAOzB,MAAM,CAACqB,WAAW,CAAC,IAAI,IAAI,GAAGD,QAAQ,GAAGpB,MAAM,CAACqB,WAAW,CAAC;AACrE,CAAC;AAED,MAAMK,YAAY,GAAG,CAAC;EAAElB,KAAK,GAAGR,MAAM,CAACI,IAAI;EAAEuB;AAAW,CAAC,GAAG,CAAC,CAAC,KAAK;EACjE,IAAIP,QAAQ,GAAGD,gBAAgB,CAACX,KAAK,CAAC;EACtC,MAAMG,WAAW,GAAGgB,UAAU,CAACP,QAAQ,CAAC;EAExC,MAAMQ,eAAe,GAAG,CAAClB,SAAS,EAAEU,QAAQ,GAAG,IAAI,KAAK;IACtD,MAAMS,iBAAiB,GAAGV,gBAAgB,CAACC,QAAQ,CAAC;IACpD,OAAOU,kBAAkB,CAACpB,SAAS,EAAEmB,iBAAiB,CAAC;EACzD,CAAC;EAED,MAAMC,kBAAkB,GAAG,CAACpB,SAAS,EAAEmB,iBAAiB,GAAG,IAAI,KAAK;IAClE,MAAME,eAAe,GAAG,MAAOF,iBAAiB,IAAI,IAAI,GAAGT,QAAQ,GAAGS,iBAAkB;IACxF,MAAMX,MAAM,GAAG;MACbc,IAAI,EAAE1B,WAAW,CAAC,MAAM,EAAEN,MAAM,CAACI,IAAI,EAAE2B,eAAe,EAAErB,SAAS,EAAEC,WAAW,CAAC;MAC/EsB,KAAK,EAAE3B,WAAW,CAAC,OAAO,EAAEN,MAAM,CAACE,KAAK,EAAE6B,eAAe,EAAErB,SAAS,EAAEC,WAAW,CAAC;MAClFuB,IAAI,EAAE5B,WAAW,CAAC,MAAM,EAAEN,MAAM,CAACG,IAAI,EAAE4B,eAAe,EAAErB,SAAS,EAAEC,WAAW,CAAC;MAC/EwB,KAAK,EAAE7B,WAAW,CAAC,OAAO,EAAEN,MAAM,CAACK,KAAK,EAAE0B,eAAe,EAAErB,SAAS,EAAEC,WAAW;IACnF,CAAC;IAED,OAAOb,MAAM,CAACoB,MAAM,EAAE;MACpBR,SAAS,EAAEkB,eAAe;MAC1BQ,WAAW,EAAEC,QAAQ,IAAI;QACvBjB,QAAQ,GAAGiB,QAAQ;MACrB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,OAAOP,kBAAkB,EAAE;AAC7B,CAAC;AAEDQ,MAAM,CAACC,OAAO,GAAG;EACfvC,MAAM;EACN0B;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}