{"ast":null,"code":"const {\n  EventEmitter\n} = require('events');\nconst InstrumentationEvent = require('./event');\nconst {\n  KafkaJSError\n} = require('../errors');\nmodule.exports = class InstrumentationEventEmitter {\n  constructor() {\n    this.emitter = new EventEmitter();\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Object} payload\n   */\n  emit(eventName, payload) {\n    if (!eventName) {\n      throw new KafkaJSError('Invalid event name', {\n        retriable: false\n      });\n    }\n    if (this.emitter.listenerCount(eventName) > 0) {\n      const event = new InstrumentationEvent(eventName, payload);\n      this.emitter.emit(eventName, event);\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {(...args: any[]) => void} listener\n   * @returns {import(\"../../types\").RemoveInstrumentationEventListener<string>} removeListener\n   */\n  addListener(eventName, listener) {\n    this.emitter.addListener(eventName, listener);\n    return () => this.emitter.removeListener(eventName, listener);\n  }\n};","map":{"version":3,"names":["EventEmitter","require","InstrumentationEvent","KafkaJSError","module","exports","InstrumentationEventEmitter","constructor","emitter","emit","eventName","payload","retriable","listenerCount","event","addListener","listener","removeListener"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/instrumentation/emitter.js"],"sourcesContent":["const { EventEmitter } = require('events')\nconst InstrumentationEvent = require('./event')\nconst { KafkaJSError } = require('../errors')\n\nmodule.exports = class InstrumentationEventEmitter {\n  constructor() {\n    this.emitter = new EventEmitter()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Object} payload\n   */\n  emit(eventName, payload) {\n    if (!eventName) {\n      throw new KafkaJSError('Invalid event name', { retriable: false })\n    }\n\n    if (this.emitter.listenerCount(eventName) > 0) {\n      const event = new InstrumentationEvent(eventName, payload)\n      this.emitter.emit(eventName, event)\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {(...args: any[]) => void} listener\n   * @returns {import(\"../../types\").RemoveInstrumentationEventListener<string>} removeListener\n   */\n  addListener(eventName, listener) {\n    this.emitter.addListener(eventName, listener)\n    return () => this.emitter.removeListener(eventName, listener)\n  }\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAa,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC1C,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,SAAS,CAAC;AAC/C,MAAM;EAAEE;AAAa,CAAC,GAAGF,OAAO,CAAC,WAAW,CAAC;AAE7CG,MAAM,CAACC,OAAO,GAAG,MAAMC,2BAA2B,CAAC;EACjDC,WAAW,GAAG;IACZ,IAAI,CAACC,OAAO,GAAG,IAAIR,YAAY,EAAE;EACnC;;EAEA;AACF;AACA;AACA;EACES,IAAI,CAACC,SAAS,EAAEC,OAAO,EAAE;IACvB,IAAI,CAACD,SAAS,EAAE;MACd,MAAM,IAAIP,YAAY,CAAC,oBAAoB,EAAE;QAAES,SAAS,EAAE;MAAM,CAAC,CAAC;IACpE;IAEA,IAAI,IAAI,CAACJ,OAAO,CAACK,aAAa,CAACH,SAAS,CAAC,GAAG,CAAC,EAAE;MAC7C,MAAMI,KAAK,GAAG,IAAIZ,oBAAoB,CAACQ,SAAS,EAAEC,OAAO,CAAC;MAC1D,IAAI,CAACH,OAAO,CAACC,IAAI,CAACC,SAAS,EAAEI,KAAK,CAAC;IACrC;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEC,WAAW,CAACL,SAAS,EAAEM,QAAQ,EAAE;IAC/B,IAAI,CAACR,OAAO,CAACO,WAAW,CAACL,SAAS,EAAEM,QAAQ,CAAC;IAC7C,OAAO,MAAM,IAAI,CAACR,OAAO,CAACS,cAAc,CAACP,SAAS,EAAEM,QAAQ,CAAC;EAC/D;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}