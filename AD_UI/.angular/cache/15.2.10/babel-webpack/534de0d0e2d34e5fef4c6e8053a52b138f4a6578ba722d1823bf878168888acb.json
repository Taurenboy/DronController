{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Encoder = require('../../../encoder');\nconst {\n  CreatePartitions: apiKey\n} = require('../../apiKeys');\n\n/**\n * CreatePartitions Request (Version: 0) => [topic_partitions] timeout validate_only\n *   topic_partitions => topic new_partitions\n *     topic => STRING\n *     new_partitions => count [assignment]\n *       count => INT32\n *       assignment => ARRAY(INT32)\n *   timeout => INT32\n *   validate_only => BOOLEAN\n */\n\nmodule.exports = ({\n  topicPartitions,\n  validateOnly = false,\n  timeout = 5000\n}) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'CreatePartitions',\n  encode: function () {\n    var _ref = _asyncToGenerator(function* () {\n      return new Encoder().writeArray(topicPartitions.map(encodeTopicPartitions)).writeInt32(timeout).writeBoolean(validateOnly);\n    });\n    return function encode() {\n      return _ref.apply(this, arguments);\n    };\n  }()\n});\nconst encodeTopicPartitions = ({\n  topic,\n  count,\n  assignments = []\n}) => {\n  return new Encoder().writeString(topic).writeInt32(count).writeNullableArray(assignments.map(encodeAssignments));\n};\nconst encodeAssignments = brokerIds => {\n  return new Encoder().writeNullableArray(brokerIds);\n};","map":{"version":3,"names":["Encoder","require","CreatePartitions","apiKey","module","exports","topicPartitions","validateOnly","timeout","apiVersion","apiName","encode","writeArray","map","encodeTopicPartitions","writeInt32","writeBoolean","topic","count","assignments","writeString","writeNullableArray","encodeAssignments","brokerIds"],"sources":["C:/Users/ingev/Documents/Desarrollo/Luna/DronController/AD_UI/node_modules/kafkajs/src/protocol/requests/createPartitions/v0/request.js"],"sourcesContent":["const Encoder = require('../../../encoder')\nconst { CreatePartitions: apiKey } = require('../../apiKeys')\n\n/**\n * CreatePartitions Request (Version: 0) => [topic_partitions] timeout validate_only\n *   topic_partitions => topic new_partitions\n *     topic => STRING\n *     new_partitions => count [assignment]\n *       count => INT32\n *       assignment => ARRAY(INT32)\n *   timeout => INT32\n *   validate_only => BOOLEAN\n */\n\nmodule.exports = ({ topicPartitions, validateOnly = false, timeout = 5000 }) => ({\n  apiKey,\n  apiVersion: 0,\n  apiName: 'CreatePartitions',\n  encode: async () => {\n    return new Encoder()\n      .writeArray(topicPartitions.map(encodeTopicPartitions))\n      .writeInt32(timeout)\n      .writeBoolean(validateOnly)\n  },\n})\n\nconst encodeTopicPartitions = ({ topic, count, assignments = [] }) => {\n  return new Encoder()\n    .writeString(topic)\n    .writeInt32(count)\n    .writeNullableArray(assignments.map(encodeAssignments))\n}\n\nconst encodeAssignments = brokerIds => {\n  return new Encoder().writeNullableArray(brokerIds)\n}\n"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAM;EAAEC,gBAAgB,EAAEC;AAAO,CAAC,GAAGF,OAAO,CAAC,eAAe,CAAC;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAG,CAAC;EAAEC,eAAe;EAAEC,YAAY,GAAG,KAAK;EAAEC,OAAO,GAAG;AAAK,CAAC,MAAM;EAC/EL,MAAM;EACNM,UAAU,EAAE,CAAC;EACbC,OAAO,EAAE,kBAAkB;EAC3BC,MAAM;IAAA,6BAAE,aAAY;MAClB,OAAO,IAAIX,OAAO,EAAE,CACjBY,UAAU,CAACN,eAAe,CAACO,GAAG,CAACC,qBAAqB,CAAC,CAAC,CACtDC,UAAU,CAACP,OAAO,CAAC,CACnBQ,YAAY,CAACT,YAAY,CAAC;IAC/B,CAAC;IAAA;MAAA;IAAA;EAAA;AACH,CAAC,CAAC;AAEF,MAAMO,qBAAqB,GAAG,CAAC;EAAEG,KAAK;EAAEC,KAAK;EAAEC,WAAW,GAAG;AAAG,CAAC,KAAK;EACpE,OAAO,IAAInB,OAAO,EAAE,CACjBoB,WAAW,CAACH,KAAK,CAAC,CAClBF,UAAU,CAACG,KAAK,CAAC,CACjBG,kBAAkB,CAACF,WAAW,CAACN,GAAG,CAACS,iBAAiB,CAAC,CAAC;AAC3D,CAAC;AAED,MAAMA,iBAAiB,GAAGC,SAAS,IAAI;EACrC,OAAO,IAAIvB,OAAO,EAAE,CAACqB,kBAAkB,CAACE,SAAS,CAAC;AACpD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}